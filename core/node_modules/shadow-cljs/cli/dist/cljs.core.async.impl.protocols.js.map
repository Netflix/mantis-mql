{"version":3,"file":"cljs.core.async.impl.protocols.js","sources":["cljs/core/async/impl/protocols.cljs"],"mappings":"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","names":["cljs.core.async.impl.protocols/close!","chan","cljs.core.async.impl.protocols/commit","h","cljs.core.async.impl.protocols/active?","cljs.core.async.impl.protocols/add!*","b","itm","x__7812__auto__","m__7813__auto__","cljs/core.async.impl.protocols.put!","goog/typeOf","cljs.core/missing-protocol","cljs.core.async.impl.protocols/WritePort","cljs.core.async.impl.protocols/closed?","cljs.core.async.impl.protocols/remove!","cljs.core.async.impl.protocols/close-buf!","cljs.core.async.impl.protocols/take!","port","fn1-handler","cljs/core.async.impl.protocols.full?","cljs/core.async.impl.protocols.remove!","cljs/core.async.impl.protocols.add!*","cljs/core.async.impl.protocols.close-buf!","cljs.core.async.impl.protocols/Buffer","cljs.core.async.impl.protocols/blockable?","cljs/core.async.impl.protocols.take!","cljs.core.async.impl.protocols/ReadPort","cljs/core.async.impl.protocols.active?","cljs/core.async.impl.protocols.blockable?","cljs/core.async.impl.protocols.commit","cljs.core.async.impl.protocols/Handler","var_args","G__30475","cljs.core.async.impl.protocols/add!","js/Error","cljs/core.async.impl.protocols.close!","cljs/core.async.impl.protocols.closed?","cljs.core.async.impl.protocols/Channel","cljs.core.async.impl.protocols/put!","val","cljs.core.async.impl.protocols/full?","cljs.core.async.impl.protocols/MAX-QUEUE-SIZE","cljs.core.async.impl.protocols/UnblockingBuffer"],"sourcesContent":[";;   Copyright (c) Rich Hickey and contributors. All rights reserved.\n;;   The use and distribution terms for this software are covered by the\n;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;;   which can be found in the file epl-v10.html at the root of this distribution.\n;;   By using this software in any fashion, you are agreeing to be bound by\n;;   the terms of this license.\n;;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.core.async.impl.protocols)\n\n(def ^:const MAX-QUEUE-SIZE 1024)\n\n(defprotocol ReadPort\n  (take! [port fn1-handler] \"derefable val if taken, nil if take was enqueued\"))\n\n(defprotocol WritePort\n  (put! [port val fn1-handler] \"derefable boolean (false if already closed) if handled, nil if put was enqueued.\n                               Must throw on nil val.\"))\n\n(defprotocol Channel\n  (close! [chan])\n  (closed? [chan]))\n\n(defprotocol Handler\n  (active? [h] \"returns true if has callback. Must work w/o lock\")\n  (blockable? [h] \"returns true if this handler may be blocked, otherwise it must not block\")\n  #_(lock-id [h] \"a unique id for lock acquisition order, 0 if no lock\")\n  (commit [h] \"commit to fulfilling its end of the transfer, returns cb. Must be called within lock\"))\n\n(defprotocol Buffer\n  (full? [b] \"returns true if buffer cannot accept put\")\n  (remove! [b] \"remove and return next item from buffer, called under chan mutex\")\n  (add!* [b itm] \"if room, add item to the buffer, returns b, called under chan mutex\")\n  (close-buf! [b] \"called on chan closed under chan mutex, return ignored\"))\n\n(defn add!\n  ([b] b)\n  ([b itm]\n     (assert (not (nil? itm)))\n     (add!* b itm)))\n\n;; Defines a buffer that will never block (return true to full?)\n(defprotocol UnblockingBuffer)\n"]}