["^ ","~:output",["^ ","~:js","goog.provide('io.mantisrx.mql.compilers.core.limit');\ngoog.require('cljs.core');\n/**\n * Transforms an integer/long n into a limit map.\n * \n * n: A whole number.\n * \n * Returns a map of {:limit n} for use with rx/take.\n */\nio.mantisrx.mql.compilers.core.limit.limit__GT_fn = (function io$mantisrx$mql$compilers$core$limit$limit__GT_fn(n){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"limit\",\"limit\",-1355822363),(function (){var G__31639 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (n.cljs$core$IFn$_invoke$arity$1 ? n.cljs$core$IFn$_invoke$arity$1(G__31639) : n.call(null,G__31639));\n})()], null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ "],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$io.mantisrx.mql.compilers.core.limit","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^?","~$goog","^@"],"~:seen",["^8",[]],"~:uses",null,"~:require-macros",["^ ","^?","^?"],"~:form",["~#list",["~$ns","^:"]],"~:js-deps",["^ "],"~:deps",["^@","^?"]],"^<","^:","~:resource-id",["~:shadow.build.classpath/resource","io/mantisrx/mql/compilers/core/limit.cljc"],"~:compiled-at",1548711933756,"~:resource-name","io/mantisrx/mql/compilers/core/limit.cljc","~:warnings",[],"~:source","(ns io.mantisrx.mql.compilers.core.limit)\n\n(defn limit->fn\n  \"Transforms an integer/long n into a limit map.\n\n   n: A whole number.\n\n   Returns a map of {:limit n} for use with rx/take.\"\n  [n]\n  {:limit (n {})})\n","~:reader-features",["^8",["~:cljs"]],"~:source-map",["^ ","~i2",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^R",52,"^S",9],["^ ","^R",0,"^S",10],["^ ","^R",0,"^S",10],["^ ","^R",50,"^S",10]],"~i6",[["^ ","^R",0,"^S",9,"^9","io.mantisrx.mql.compilers.core.limit/limit->fn"]]],"~i8",["^ ","~i3",[["^ ","^R",112,"^S",9,"^9","n"]]],"~i9",["^ ","~i10",[["^ ","^R",106,"^S",10],["^ ","^R",123,"^S",10,"^9","G__31639"],["^ ","^R",134,"^S",10],["^ ","^R",0,"^S",11],["^ ","^R",0,"^S",11],["^ ","^R",74,"^S",11,"^9","G__31639"],["^ ","^R",98,"^S",11,"^9","G__31639"]],"~i11",[["^ ","^R",8,"^S",11,"^9","n"],["^ ","^R",42,"^S",11,"^9","n"],["^ ","^R",86,"^S",11,"^9","n"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["^J","io/mantisrx/mql/compilers/core/limit.cljc"],[1548191679000],["~:macro","^?"],1516731430000,["^J","goog/math/math.js"],1516731431000,["^J","goog/array/array.js"],1516731431000,["^J","goog/debug/error.js"],1516731431000,["^J","goog/dom/nodetype.js"],1516731431000,["^J","goog/object/object.js"],1516731431000,"~:SHADOW-TIMESTAMP",1516731432000,["^J","goog/math/long.js"],1516731431000,["^J","goog/functions/functions.js"],1516731431000,["^J","goog/structs/map.js"],1516731431000,["^J","goog/asserts/asserts.js"],1516731431000,["^J","goog/uri/uri.js"],1516731431000,["^J","goog/base.js"],1516731431000,["^J","goog/structs/structs.js"],1516731431000,["^J","goog/string/string.js"],1516731431000,["^J","goog/reflect/reflect.js"],1516731431000,["^J","goog/string/stringbuffer.js"],1516731431000,["^J","goog/iter/iter.js"],1516731431000,["^J","cljs/core.cljs"],1516731430000,["^J","goog/math/integer.js"],1516731431000,["^J","goog/uri/utils.js"],1516731431000]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ "],"^6",null,"^7",["^8",[]],"^9","^:","^=",null,"^>",["^ ","^?","^?","^@","^@"],"^A",["^8",[]],"^B",null,"~:defs",["^ ","~$limit->fn",["^ ","~:protocol-inline",null,"^5",["^ ","~:file","io/mantisrx/mql/compilers/core/limit.cljc","~:line",3,"~:column",7,"~:end-line",3,"~:end-column",16,"~:arglists",["^E",["~$quote",["^E",[["~$n"]]]]],"~:doc","Transforms an integer/long n into a limit map.\n\n   n: A whole number.\n\n   Returns a map of {:limit n} for use with rx/take."],"^9","~$io.mantisrx.mql.compilers.core.limit/limit->fn","~:variadic",false,"^13","io/mantisrx/mql/compilers/core/limit.cljc","^17",16,"~:method-params",["^E",[["~$n"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^15",1,"^14",3,"^16",3,"~:max-fixed-arity",1,"~:fn-var",true,"^18",["^E",["^19",["^E",[["~$n"]]]]],"^1:","Transforms an integer/long n into a limit map.\n\n   n: A whole number.\n\n   Returns a map of {:limit n} for use with rx/take."]],"^C",["^ ","^?","^?"],"~:cljs.analyzer/constants",["^ ","^A",["^8",["~:limit"]],"~:order",["^1C"]],"^G",["^ "],"^H",["^@","^?"]],"^<","^:","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^X",[["^1G","~:static-fns"],true,["^1G","~:elide-asserts"],false,["^1G","~:optimize-constants"],null,["^1G","~:emit-constants"],null,["^1G","~:infer-externs"],true,["^1G","^O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^1G","~:fn-invoke-direct"],null,["^1G","^Q"],"/dev/null"]]]