{"version":3,"file":"shadow.cljs.npm.transform.js","sources":["shadow/cljs/npm/transform.cljs"],"mappings":"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","names":["shadow.cljs.npm.transform/main-loop","shadow.cljs.npm.transform/process-request","line","shadow.cljs.npm.transform/external-helpers-plugin","chunk","buf","buffer","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","nl","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","resource-name","plugins","p__34728","map__34729","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","shadow.cljs.npm.transform/babel-transform","code","req","js/process.stdin.on","shadow.cljs.npm.transform/stdin-data","res","js/shadow.js.shim.module$babel_core.transform","p1__34727#","id","opts","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","shadow.cljs.npm.transform/process-chunk","shadow.js.shim.module$babel_preset_env","t","c__32017__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__32018__auto__","switch__31732__auto__","state_34750","state_val_34751","inst_34736","statearr-34752","statearr-34753","cljs.core.async.impl.ioc-helpers/take!","inst_34748","cljs.core.async.impl.ioc-helpers/return-chan","inst_34739","inst_34740","statearr-34757","statearr-34758","statearr-34759","statearr-34760","inst_34743","statearr-34761","statearr-34762","inst_34746","statearr-34763","statearr-34764","state-machine__31733__auto__","ret-value__31734__auto__","result__31735__auto__","cljs.core/keyword-identical?","e34765","js/Object","ex__31736__auto__","statearr-34766","cljs.core.async.impl.ioc-helpers/process-exception","state__32019__auto__","statearr-34767","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","presets","G__34781","G__34782","cljs.core.async/close!","shadow.cljs.npm.transform/stdin","ref","cljs.core/not","clojure.string/includes?","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic","cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2","clojure.string.index_of.cljs$core$IFn$_invoke$arity$2","G__34731","js/JSON.stringify","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns shadow.cljs.npm.transform\n  (:require\n    [clojure.string :as str]\n    [cljs.core.async :as async :refer (go)]\n    [cljs.reader :refer (read-string)]\n    [\"babel-core\" :as babel]\n    [\"babel-preset-env\" :as babel-preset-env]\n    ))\n\n;; why is this a plugin and not a config option?\n(defn external-helpers-plugin [ref]\n  (let [t (.. ref -types)\n        id (.identifier t \"global.shadow.js.babel\")]\n    #js {:pre #(.set % \"helpersNamespace\" id)}))\n\n(defn babel-transform [{:keys [code resource-name]}]\n  (let [presets\n        #js [babel-preset-env]\n\n        plugins\n        #js [external-helpers-plugin]\n\n        opts\n        #js {:presets presets\n             :plugins plugins\n             ;; only allow babelrc processing for project files\n             :babelrc (not (str/includes? resource-name \"node_modules\"))\n             :filename resource-name\n             :highlightCode false\n             :sourceMaps true}\n\n        res\n        (babel/transform\n          code\n          opts)]\n\n    {:code (.-code res)\n     :source-map-json (js/JSON.stringify (.-map res))\n     :metadata (js->clj (.-metadata res) :keywordize-keys true)}\n    ))\n\n(defn process-request [line]\n  (let [req\n        (read-string line)\n\n        #_{:code \"class Foo {}; let x = 1; export { x }; export default x;\"\n           :resource-name \"test.js\"}\n        res\n        (babel-transform req)]\n    (prn res)))\n\n(defn process-chunk [buffer chunk]\n  (let [nl (str/index-of chunk \"\\n\")]\n    (if-not nl\n      ;; no newline, return new buffer\n      (str buffer chunk)\n\n      ;; did contain \\n, concat with remaining buffer, handoff\n      (let [line (str buffer (subs chunk 0 nl))]\n        (process-request line)\n        (recur \"\" (subs chunk (inc nl))))\n      )))\n\n(def stdin (async/chan))\n\n(def main-loop\n  (go (loop [buffer \"\"]\n        (when-some [chunk (<! stdin)]\n          (recur (process-chunk buffer chunk))\n          ))))\n\n(defn stdin-data [buf]\n  (let [chunk (.toString buf)]\n    (async/put! stdin chunk)))\n\n(js/process.stdin.on \"data\" stdin-data)\n(js/process.stdin.on \"close\" #(async/close! stdin))\n"]}