var $CLJS = require("./cljs_env");
require("./cljs.core.js");
require("./shadow.js.shim.module$fs.js");
var cljs=$CLJS.cljs;
var shadow=$CLJS.shadow;
var goog=$CLJS.goog;

goog.dependencies_.written["shadow.cljs.npm.util.js"] = true;

goog.provide('shadow.cljs.npm.util');
goog.require('cljs.core');
goog.require('shadow.js.shim.module$fs');
shadow.cljs.npm.util.slurp = (function shadow$cljs$npm$util$slurp(file){
return shadow.js.shim.module$fs.readFileSync(file).toString();
});
shadow.cljs.npm.util.reduce__GT_ = (function shadow$cljs$npm$util$reduce__GT_(init,reduce_fn,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(reduce_fn,init,coll);
});
shadow.cljs.npm.util.conj_set = (function shadow$cljs$npm$util$conj_set(x,y){
if((x == null)){
return cljs.core.PersistentHashSet.createAsIfByAssoc([y]);
} else {
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(x,y);
}
});

module.exports = shadow.cljs.npm.util;

//# sourceMappingURL=shadow.cljs.npm.util.js.map
