["^ ","~:output",["^ ","~:js","goog.provide('io.mantisrx.mql.compilers.anomaly');\nio.mantisrx.mql.compilers.anomaly.mad_anomaly__GT_fn = (function io$mantisrx$mql$compilers$anomaly$mad_anomaly__GT_fn(method,prop,alpha,beta){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"anomaly\",\"anomaly\",-1459726263),(function (obs){\nreturn obs;\n})], null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This namespace contains the mql built-in anomaly detectors."],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$io.mantisrx.mql.compilers.anomaly","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^@","~$goog","^A"],"~:seen",["^9",[]],"~:uses",null,"~:require-macros",["^ ","^@","^@"],"~:form",["~#list",["~$ns","^;","This namespace contains the mql built-in anomaly detectors."]],"~:js-deps",["^ "],"~:deps",["^A","^@"]],"^=","^;","~:resource-id",["~:shadow.build.classpath/resource","io/mantisrx/mql/compilers/anomaly.cljc"],"~:compiled-at",1548711689004,"~:resource-name","io/mantisrx/mql/compilers/anomaly.cljc","~:warnings",[],"~:source","(ns io.mantisrx.mql.compilers.anomaly\n  \"This namespace contains the mql built-in anomaly detectors.\"\n#?(:clj  (:require [rx.lang.clojure.core :as rx]\n            [rx.lang.clojure.interop :as rxi])))\n\n\n#?(:clj (defn mad-anomaly->fn\n  \"method: A string representing the method, right now only MAD is available.\n   prop: A property function for fetching the number out of datum.\n   alpha: The learning rate parameter. Controls how quickly our median estimation adapts.\n   beta:  The threshold parameter. If the value is above median by (beta * median) we have an anomaly.\n\n   Returns: A function which takes an observables and returns the observable with anomalies bolted on.\"\n  [method prop alpha beta]\n  {:anomaly\n   (fn [obs]\n     (let [alpha (alpha {})\n           beta (beta {})]\n     (->> obs\n          (rx/reductions (fn [acc datum]\n                           (if (nil? (:median acc))\n                             {:median (prop datum) :datum datum}\n                             (if (< (:median acc) (prop datum))\n                               {:median (+ (:median acc) alpha) :datum datum}\n                               {:median (- (:median acc) alpha) :datum datum})))\n                         {:median nil :datum nil})\n          (rx/filter #(not (nil? (:datum %))))\n          (rx/map (fn [acc]\n                    (let\n                      [anomalous (< (* beta (:median acc 0))\n                                    (prop (:datum acc)))]\n                      (assoc (:datum acc) \"anomalous\" anomalous)))))))}))\n\n#?(:cljs (defn mad-anomaly->fn [method prop alpha beta] {:anomaly (fn [obs] obs)}))\n","~:reader-features",["^9",["~:cljs"]],"~:source-map",["^ ","~i33",["^ ","~i9",[["^ ","~:gcol",0,"~:gline",1],["^ ","^T",55,"^U",1],["^ ","^T",0,"^U",2],["^ ","^T",0,"^U",2],["^ ","^T",50,"^U",2]],"~i15",[["^ ","^T",0,"^U",1,"^:","io.mantisrx.mql.compilers.anomaly/mad-anomaly->fn"]],"~i32",[["^ ","^T",118,"^U",1,"^:","method"]],"~i39",[["^ ","^T",125,"^U",1,"^:","prop"]],"~i44",[["^ ","^T",130,"^U",1,"^:","alpha"]],"~i50",[["^ ","^T",136,"^U",1,"^:","beta"]],"~i66",[["^ ","^T",110,"^U",2],["^ ","^T",0,"^U",3]],"~i71",[["^ ","^T",121,"^U",2,"^:","obs"]],"~i76",[["^ ","^T",0,"^U",3,"^:","obs"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^@"],1516731430000,["^K","goog/math/math.js"],1516731431000,["^K","goog/array/array.js"],1516731431000,["^K","goog/debug/error.js"],1516731431000,["^K","goog/dom/nodetype.js"],1516731431000,["^K","io/mantisrx/mql/compilers/anomaly.cljc"],[1548191679000],["^K","goog/object/object.js"],1516731431000,"~:SHADOW-TIMESTAMP",1516731432000,["^K","goog/math/long.js"],1516731431000,["^K","goog/functions/functions.js"],1516731431000,["^K","goog/structs/map.js"],1516731431000,["^K","goog/asserts/asserts.js"],1516731431000,["^K","goog/uri/uri.js"],1516731431000,["^K","goog/base.js"],1516731431000,["^K","goog/structs/structs.js"],1516731431000,["^K","goog/string/string.js"],1516731431000,["^K","goog/reflect/reflect.js"],1516731431000,["^K","goog/string/stringbuffer.js"],1516731431000,["^K","goog/iter/iter.js"],1516731431000,["^K","cljs/core.cljs"],1516731430000,["^K","goog/math/integer.js"],1516731431000,["^K","goog/uri/utils.js"],1516731431000]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","This namespace contains the mql built-in anomaly detectors."],"^7",null,"^8",["^9",[]],"^:","^;","^>",null,"^?",["^ ","^@","^@","^A","^A"],"^B",["^9",[]],"^C",null,"~:defs",["^ ","~$mad-anomaly->fn",["^ ","~:protocol-inline",null,"^5",["^ ","~:file","io/mantisrx/mql/compilers/anomaly.cljc","~:line",34,"~:column",16,"~:end-line",34,"~:end-column",31,"~:arglists",["^F",["~$quote",["^F",[["~$method","~$prop","~$alpha","~$beta"]]]]]],"^:","~$io.mantisrx.mql.compilers.anomaly/mad-anomaly->fn","~:variadic",false,"^1;","io/mantisrx/mql/compilers/anomaly.cljc","^1?",31,"~:method-params",["^F",[["^1B","^1C","^1D","^1E"]]],"~:protocol-impl",null,"~:arglists-meta",["^F",[null,null]],"^1=",10,"^1<",34,"^1>",34,"~:max-fixed-arity",4,"~:fn-var",true,"^1@",["^F",["^1A",["^F",[["^1B","^1C","^1D","^1E"]]]]]]],"^D",["^ ","^@","^@"],"~:cljs.analyzer/constants",["^ ","^B",["^9",["~:anomaly"]],"~:order",["^1N"]],"^H",["^ "],"^I",["^A","^@"]],"^=","^;","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^14",[["^1R","~:static-fns"],true,["^1R","~:elide-asserts"],true,["^1R","~:optimize-constants"],null,["^1R","~:emit-constants"],null,["^1R","~:infer-externs"],true,["^1R","^P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^1R","~:fn-invoke-direct"],null,["^1R","^R"],null]]]