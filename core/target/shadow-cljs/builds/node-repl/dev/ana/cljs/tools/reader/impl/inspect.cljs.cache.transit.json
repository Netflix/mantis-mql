["^ ","~:output",["^ ","~:js","goog.provide('cljs.tools.reader.impl.inspect');\ngoog.require('cljs.core');\ncljs.tools.reader.impl.inspect.inspect_STAR__col = (function cljs$tools$reader$impl$inspect$inspect_STAR__col(truncate,col,start,end){\nvar n = cljs.core.count(col);\nvar l = (cljs.core.truth_(truncate)?(0):(function (){var x__5485__auto__ = (10);\nvar y__5486__auto__ = n;\nreturn ((x__5485__auto__ < y__5486__auto__) ? x__5485__auto__ : y__5486__auto__);\n})());\nvar elements = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.impl.inspect.inspect_STAR_,true),cljs.core.take.cljs$core$IFn$_invoke$arity$2(l,col));\nvar content = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\" \",elements));\nvar suffix = (((l < n))?\"...\":null);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(start),cljs.core.str.cljs$core$IFn$_invoke$arity$1(content),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix),cljs.core.str.cljs$core$IFn$_invoke$arity$1(end)].join('');\n});\ncljs.tools.reader.impl.inspect.dispatch_inspect = (function cljs$tools$reader$impl$inspect$dispatch_inspect(_,x){\nif((x == null)){\nreturn new cljs.core.Keyword(null,\"nil\",\"nil\",99600501);\n} else {\nif(typeof x === 'string'){\nreturn new cljs.core.Keyword(null,\"string\",\"string\",-1989541586);\n} else {\nif((x instanceof cljs.core.Keyword)){\nreturn new cljs.core.Keyword(null,\"strable\",\"strable\",1877668047);\n} else {\nif(typeof x === 'number'){\nreturn new cljs.core.Keyword(null,\"strable\",\"strable\",1877668047);\n} else {\nif((x instanceof cljs.core.Symbol)){\nreturn new cljs.core.Keyword(null,\"strable\",\"strable\",1877668047);\n} else {\nif(cljs.core.vector_QMARK_(x)){\nreturn new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158);\n} else {\nif(cljs.core.list_QMARK_(x)){\nreturn new cljs.core.Keyword(null,\"list\",\"list\",765357683);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn new cljs.core.Keyword(null,\"map\",\"map\",1371690461);\n} else {\nif(cljs.core.set_QMARK_(x)){\nreturn new cljs.core.Keyword(null,\"set\",\"set\",304602554);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,true)){\nreturn new cljs.core.Keyword(null,\"strable\",\"strable\",1877668047);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,false)){\nreturn new cljs.core.Keyword(null,\"strable\",\"strable\",1877668047);\n} else {\nreturn cljs.core.type(x);\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nif(typeof cljs.tools.reader.impl.inspect.inspect_STAR_ !== 'undefined'){\n} else {\ncljs.tools.reader.impl.inspect.inspect_STAR_ = (function (){var method_table__6181__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__6182__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__6183__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__6184__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__6185__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),cljs.core.get_global_hierarchy());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.tools.reader.impl.inspect\",\"inspect*\"),cljs.tools.reader.impl.inspect.dispatch_inspect,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__6185__auto__,method_table__6181__auto__,prefer_table__6182__auto__,method_cache__6183__auto__,cached_hierarchy__6184__auto__));\n})();\n}\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),(function (truncate,x){\nvar n = (cljs.core.truth_(truncate)?(5):(20));\nvar suffix = (((x.length > n))?\"...\\\"\":\"\\\"\");\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\\"\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.substring((0),(function (){var x__5485__auto__ = n;\nvar y__5486__auto__ = x.length;\nreturn ((x__5485__auto__ < y__5486__auto__) ? x__5485__auto__ : y__5486__auto__);\n})())),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix)].join('');\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"strable\",\"strable\",1877668047),(function (truncate,x){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join('');\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.IndexedSeq,(function (truncate,x){\nreturn \"<indexed seq>\";\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.PersistentArrayMapSeq,(function (truncate,x){\nreturn \"<map seq>\";\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.NodeSeq,(function (truncate,x){\nreturn \"<map seq>\";\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.Cons,(function (truncate,x){\nreturn \"<cons>\";\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.LazySeq,(function (truncate,x){\nreturn \"<lazy seq>\";\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),(function (_,___$1){\nreturn \"nil\";\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"list\",\"list\",765357683),(function (truncate,col){\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,col,\"(\",\")\");\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"map\",\"map\",1371690461),(function (truncate,m){\nvar len = cljs.core.count(m);\nvar n_shown = (cljs.core.truth_(truncate)?(0):len);\nvar contents = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n_shown,m));\nvar suffix = (((len > n_shown))?\"...}\":\"}\");\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,contents,\"{\",suffix);\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"set\",\"set\",304602554),(function (truncate,col){\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,col,\"#{\",\"}\");\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),(function (truncate,col){\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,col,\"[\",\"]\");\n}));\ncljs.core._add_method(cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (truncate,x){\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0));\n}));\n/**\n * Return a string description of the value supplied.\n * May be the a string version of the value itself (e.g. \"true\")\n * or it may be a description (e.g. \"an instance of Foo\").\n * If truncate is true then return a very terse version of\n * the inspection.\n */\ncljs.tools.reader.impl.inspect.inspect = (function cljs$tools$reader$impl$inspect$inspect(var_args){\nvar G__29821 = arguments.length;\nswitch (G__29821) {\ncase 1:\nreturn cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn (cljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IFn$_invoke$arity$2(false,x) : cljs.tools.reader.impl.inspect.inspect_STAR_.call(null,false,x));\n});\n\ncljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2 = (function (truncate,x){\nreturn (cljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IFn$_invoke$arity$2(truncate,x) : cljs.tools.reader.impl.inspect.inspect_STAR_.call(null,truncate,x));\n});\n\ncljs.tools.reader.impl.inspect.inspect.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ "],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs.tools.reader.impl.inspect","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^?","~$goog","^@"],"~:seen",["^8",[]],"~:uses",null,"~:require-macros",["^ ","^?","^?"],"~:form",["~#list",["~$ns","^:"]],"~:js-deps",["^ "],"~:deps",["^@","^?"]],"^<","^:","~:resource-id",["~:shadow.build.classpath/resource","cljs/tools/reader/impl/inspect.cljs"],"~:compiled-at",1518118138875,"~:resource-name","cljs/tools/reader/impl/inspect.cljs","~:warnings",[],"~:source",";;   Copyright (c) Russ Olsen, Nicola Mometto, Rich Hickey & contributors.\n;;   The use and distribution terms for this software are covered by the\n;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;;   which can be found in the file epl-v10.html at the root of this distribution.\n;;   By using this software in any fashion, you are agreeing to be bound by\n;;   the terms of this license.\n;;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.tools.reader.impl.inspect)\n\n(declare inspect*)\n\n(defn- inspect*-col [truncate col start end]\n  (let [n (count col)\n        l (if truncate 0 (min 10 n))\n        elements (map (partial inspect* true) (take l col))\n        content (apply str (interpose \" \" elements))\n        suffix (if (< l n) \"...\")]\n    (str start content suffix end)))\n\n(defn- dispatch-inspect\n  [_ x]\n  (cond\n   (nil? x) :nil\n   (string? x) :string\n   (keyword? x) :strable\n   (number? x) :strable\n   (symbol? x) :strable\n   (vector? x) :vector\n   (list? x)  :list\n   (map? x) :map\n   (set? x) :set\n   (= x true) :strable\n   (= x false) :strable\n   :default (type x)))\n\n(defmulti inspect* dispatch-inspect)\n\n(defmethod inspect* :string [truncate ^String x]\n  (let [n (if truncate 5 20)\n        suffix (if (> (.-length x) n) \"...\\\"\" \"\\\"\")]\n    (str\n      \\\"\n      (.substring ^String x 0 (min n (.-length x)))\n      suffix)))\n\n(defmethod inspect* :strable [truncate x] (str x))\n\n(defmethod inspect* cljs.core/IndexedSeq [truncate x]\n  \"<indexed seq>\")\n\n(defmethod inspect* cljs.core/PersistentArrayMapSeq [truncate x]\n  \"<map seq>\")\n\n(defmethod inspect* cljs.core/NodeSeq [truncate x]\n  \"<map seq>\")\n\n(defmethod inspect* cljs.core/Cons [truncate x] \"<cons>\")\n\n(defmethod inspect* cljs.core/LazySeq [truncate x] \"<lazy seq>\")\n\n(defmethod inspect* :nil [_ _] \"nil\")\n\n(defmethod inspect* :list [truncate col]\n  (inspect*-col truncate col \\( \\)))\n\n(defmethod inspect* :map [truncate m]\n  (let [len (count m)\n        n-shown (if truncate 0 len)\n        contents (apply concat (take n-shown m))\n        suffix (if (> len n-shown) \"...}\" \\})]\n    (inspect*-col truncate contents \\{ suffix)))\n\n(defmethod inspect* :set [truncate col]\n  (inspect*-col truncate col \"#{\" \\}))\n\n(defmethod inspect* :vector [truncate col]\n  (inspect*-col truncate col \\[ \\]))\n\n(defmethod inspect* :default [truncate x]\n  (pr-str (type x)))\n\n(defn inspect\n  \"Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \\\"true\\\")\n   or it may be a description (e.g. \\\"an instance of Foo\\\").\n   If truncate is true then return a very terse version of\n   the inspection.\"\n  ([x] (inspect* false x))\n  ([truncate x] (inspect* truncate x)))\n","~:reader-features",["^8",["~:cljs"]],"~:source-map",["^ ","~i10",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^S",0,"^T",2]]],"~i12",["^ ","~i0",[["^ ","^S",0,"^T",2],["^ ","^S",51,"^T",2],["^ ","^S",0,"^T",3]],"~i7",[["^ ","^S",0,"^T",2,"^9","cljs.tools.reader.impl.inspect/inspect*-col"]],"~i21",[["^ ","^S",110,"^T",2,"^9","truncate"]],"~i30",[["^ ","^S",119,"^T",2,"^9","col"]],"~i34",[["^ ","^S",123,"^T",2,"^9","start"]],"~i40",[["^ ","^S",129,"^T",2,"^9","end"]]],"~i13",["^ ","~i2",[["^ ","^S",0,"^T",3],["^ ","^S",0,"^T",11]],"~i8",[["^ ","^S",4,"^T",3,"^9","n"]],"^R",[["^ ","^S",8,"^T",3]],"~i11",[["^ ","^S",8,"^T",3,"^9","cljs.core/count"]],"~i17",[["^ ","^S",24,"^T",3,"^9","col"]]],"~i14",["^ ","~i8",[["^ ","^S",4,"^T",4,"^9","l"]],"^R",[["^ ","^S",8,"^T",4],["^ ","^S",36,"^T",4]],"^11",[["^ ","^S",26,"^T",4,"^9","truncate"]],"~i25",[["^ ","^S",40,"^T",4],["^ ","^S",57,"^T",4,"^9","x__5485__auto__"],["^ ","^S",75,"^T",4],["^ ","^S",4,"^T",5,"^9","y__5486__auto__"],["^ ","^S",0,"^T",6],["^ ","^S",0,"^T",6],["^ ","^S",9,"^T",6,"^9","x__5485__auto__"],["^ ","^S",27,"^T",6,"^9","y__5486__auto__"],["^ ","^S",46,"^T",6,"^9","x__5485__auto__"],["^ ","^S",64,"^T",6,"^9","y__5486__auto__"]],"~i33",[["^ ","^S",22,"^T",5,"^9","n"]]],"~i15",["^ ","~i8",[["^ ","^S",4,"^T",8,"^9","elements"]],"^10",[["^ ","^S",15,"^T",8]],"~i18",[["^ ","^S",15,"^T",8,"^9","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i22",[["^ ","^S",59,"^T",8],["^ ","^S",152,"^T",8]],"~i23",[["^ ","^S",59,"^T",8,"^9","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"~i31",[["^ ","^S",107,"^T",8,"^9","cljs.tools.reader.impl.inspect/inspect*"]],"~i46",[["^ ","^S",158,"^T",8]],"~i47",[["^ ","^S",158,"^T",8,"^9","cljs.core.take.cljs$core$IFn$_invoke$arity$2"]],"~i52",[["^ ","^S",203,"^T",8,"^9","l"]],"~i54",[["^ ","^S",205,"^T",8,"^9","col"]]],"~i16",["^ ","~i8",[["^ ","^S",4,"^T",9,"^9","content"]],"^1=",[["^ ","^S",14,"^T",9]],"^10",[["^ ","^S",14,"^T",9,"^9","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^17",[["^ ","^S",60,"^T",9,"^9","cljs.core/str"]],"~i27",[["^ ","^S",74,"^T",9],["^ ","^S",124,"^T",9]],"~i28",[["^ ","^S",74,"^T",9,"^9","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2"]],"~i42",[["^ ","^S",128,"^T",9,"^9","elements"]]],"^10",["^ ","~i8",[["^ ","^S",4,"^T",10,"^9","suffix"]],"^14",[["^ ","^S",13,"^T",10],["^ ","^S",24,"^T",10],["^ ","^S",30,"^T",10]],"~i19",[["^ ","^S",15,"^T",10]],"^16",[["^ ","^S",16,"^T",10,"^9","l"]],"~i24",[["^ ","^S",20,"^T",10,"^9","n"]]],"^15",["^ ","~i4",[["^ ","^S",0,"^T",11]],"~i9",[["^ ","^S",52,"^T",11,"^9","start"]],"^14",[["^ ","^S",103,"^T",11,"^9","content"]],"^17",[["^ ","^S",156,"^T",11,"^9","suffix"]],"^W",[["^ ","^S",208,"^T",11,"^9","end"]]],"~i20",["^ ","~i0",[["^ ","^S",0,"^T",13],["^ ","^S",50,"^T",13],["^ ","^S",0,"^T",14]],"~i7",[["^ ","^S",0,"^T",13,"^9","cljs.tools.reader.impl.inspect/dispatch-inspect"]]],"^V",["^ ","~i3",[["^ ","^S",108,"^T",13,"^9","_"]],"~i5",[["^ ","^S",110,"^T",13,"^9","x"]]],"^16",["^ ","~i2",[["^ ","^S",0,"^T",14],["^ ","^S",0,"^T",15],["^ ","^S",0,"^T",17],["^ ","^S",0,"^T",18],["^ ","^S",0,"^T",20],["^ ","^S",0,"^T",21],["^ ","^S",0,"^T",23],["^ ","^S",0,"^T",24],["^ ","^S",0,"^T",26],["^ ","^S",0,"^T",27],["^ ","^S",0,"^T",29],["^ ","^S",0,"^T",30],["^ ","^S",0,"^T",32],["^ ","^S",0,"^T",33],["^ ","^S",0,"^T",35],["^ ","^S",0,"^T",36],["^ ","^S",0,"^T",38],["^ ","^S",0,"^T",39],["^ ","^S",0,"^T",41],["^ ","^S",0,"^T",42],["^ ","^S",0,"^T",44],["^ ","^S",0,"^T",45],["^ ","^S",0,"^T",47]]],"^17",["^ ","~i3",[["^ ","^S",3,"^T",14],["^ ","^S",9,"^T",14]],"~i9",[["^ ","^S",4,"^T",14,"^9","x"]]],"^1B",["^ ","~i3",[["^ ","^S",3,"^T",17]],"^U",[["^ ","^S",10,"^T",17,"^9","x"]]],"^12",["^ ","~i3",[["^ ","^S",3,"^T",20],["^ ","^S",17,"^T",20,"^9","cljs.core/Keyword"]],"^Z",[["^ ","^S",4,"^T",20,"^9","x"]]],"~i26",["^ ","~i3",[["^ ","^S",3,"^T",23]],"^U",[["^ ","^S",10,"^T",23,"^9","x"]]],"^1>",["^ ","~i3",[["^ ","^S",3,"^T",26],["^ ","^S",17,"^T",26,"^9","cljs.core/Symbol"]],"^U",[["^ ","^S",4,"^T",26,"^9","x"]]],"^1?",["^ ","~i3",[["^ ","^S",3,"^T",29]],"~i4",[["^ ","^S",3,"^T",29,"^9","cljs.core/vector?"]],"^U",[["^ ","^S",27,"^T",29,"^9","x"]]],"~i29",["^ ","~i3",[["^ ","^S",3,"^T",32]],"~i4",[["^ ","^S",3,"^T",32,"^9","cljs.core/list?"]],"^R",[["^ ","^S",25,"^T",32,"^9","x"]]],"^W",["^ ","~i3",[["^ ","^S",3,"^T",35]],"~i4",[["^ ","^S",3,"^T",35,"^9","cljs.core/map?"]],"~i9",[["^ ","^S",24,"^T",35,"^9","x"]]],"^18",["^ ","~i3",[["^ ","^S",3,"^T",38]],"~i4",[["^ ","^S",3,"^T",38,"^9","cljs.core/set?"]],"~i9",[["^ ","^S",24,"^T",38,"^9","x"]]],"~i32",["^ ","~i3",[["^ ","^S",3,"^T",41],["^ ","^S",50,"^T",41]],"~i4",[["^ ","^S",3,"^T",41,"^9","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i6",[["^ ","^S",48,"^T",41,"^9","x"]]],"^13",["^ ","~i3",[["^ ","^S",3,"^T",44],["^ ","^S",50,"^T",44]],"~i4",[["^ ","^S",3,"^T",44,"^9","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i6",[["^ ","^S",48,"^T",44,"^9","x"]]],"^X",["^ ","^U",[["^ ","^S",0,"^T",47]],"^Z",[["^ ","^S",7,"^T",47,"^9","cljs.core/type"]],"^15",[["^ ","^S",22,"^T",47,"^9","x"]]],"~i36",["^ ","~i0",[["^ ","^S",0,"^T",61],["^ ","^S",3,"^T",61],["^ ","^S",0,"^T",62],["^ ","^S",0,"^T",63],["^ ","^S",0,"^T",63],["^ ","^S",47,"^T",63],["^ ","^S",64,"^T",63,"^9","method-table__6181__auto__"],["^ ","^S",93,"^T",63],["^ ","^S",93,"^T",63,"^9","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^S",138,"^T",63],["^ ","^S",4,"^T",64,"^9","prefer-table__6182__auto__"],["^ ","^S",33,"^T",64],["^ ","^S",33,"^T",64,"^9","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^S",78,"^T",64],["^ ","^S",4,"^T",65,"^9","method-cache__6183__auto__"],["^ ","^S",33,"^T",65],["^ ","^S",33,"^T",65,"^9","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^S",78,"^T",65],["^ ","^S",4,"^T",66,"^9","cached-hierarchy__6184__auto__"],["^ ","^S",37,"^T",66],["^ ","^S",37,"^T",66,"^9","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^S",82,"^T",66],["^ ","^S",4,"^T",67,"^9","hierarchy__6185__auto__"],["^ ","^S",30,"^T",67],["^ ","^S",30,"^T",67,"^9","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^S",74,"^T",67],["^ ","^S",109,"^T",67],["^ ","^S",173,"^T",67],["^ ","^S",173,"^T",67,"^9","cljs.core/get-global-hierarchy"],["^ ","^S",0,"^T",68],["^ ","^S",0,"^T",68],["^ ","^S",12,"^T",68,"^9","cljs.core/MultiFn"],["^ ","^S",30,"^T",68],["^ ","^S",30,"^T",68,"^9","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2"],["^ ","^S",77,"^T",68],["^ ","^S",110,"^T",68],["^ ","^S",170,"^T",68],["^ ","^S",230,"^T",68,"^9","hierarchy__6185__auto__"],["^ ","^S",254,"^T",68,"^9","method-table__6181__auto__"],["^ ","^S",281,"^T",68,"^9","prefer-table__6182__auto__"],["^ ","^S",308,"^T",68,"^9","method-cache__6183__auto__"],["^ ","^S",335,"^T",68,"^9","cached-hierarchy__6184__auto__"]],"^R",[["^ ","^S",10,"^T",61,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",0,"^T",63,"^9","cljs.tools.reader.impl.inspect/inspect*"]],"^1A",[["^ ","^S",122,"^T",68,"^9","cljs.tools.reader.impl.inspect/dispatch-inspect"]]],"~i38",["^ ","~i0",[["^ ","^S",0,"^T",71],["^ ","^S",0,"^T",71,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",71,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",71],["^ ","^S",125,"^T",71],["^ ","^S",0,"^T",72]],"^1E",[["^ ","^S",136,"^T",71,"^9","truncate"]],"^19",[["^ ","^S",145,"^T",71,"^9","x"]]],"~i39",["^ ","~i2",[["^ ","^S",0,"^T",72],["^ ","^S",0,"^T",74]],"~i8",[["^ ","^S",4,"^T",72,"^9","n"]],"^R",[["^ ","^S",8,"^T",72],["^ ","^S",36,"^T",72],["^ ","^S",40,"^T",72]],"^11",[["^ ","^S",26,"^T",72,"^9","truncate"]]],"^Y",["^ ","~i8",[["^ ","^S",4,"^T",73,"^9","suffix"]],"^14",[["^ ","^S",13,"^T",73],["^ ","^S",31,"^T",73],["^ ","^S",39,"^T",73]],"^1A",[["^ ","^S",15,"^T",73]],"^16",[["^ ","^S",16,"^T",73]],"^1F",[["^ ","^S",16,"^T",73,"^9","x"]],"~i35",[["^ ","^S",27,"^T",73,"^9","n"]]],"~i41",["^ ","~i4",[["^ ","^S",0,"^T",74],["^ ","^S",52,"^T",74]]],"~i43",["^ ","~i6",[["^ ","^S",102,"^T",74],["^ ","^S",114,"^T",74]],"^1D",[["^ ","^S",102,"^T",74,"^9","x"]],"^W",[["^ ","^S",118,"^T",74],["^ ","^S",135,"^T",74,"^9","x__5485__auto__"],["^ ","^S",4,"^T",75,"^9","y__5486__auto__"],["^ ","^S",0,"^T",76],["^ ","^S",0,"^T",76],["^ ","^S",9,"^T",76,"^9","x__5485__auto__"],["^ ","^S",27,"^T",76,"^9","y__5486__auto__"],["^ ","^S",46,"^T",76,"^9","x__5485__auto__"],["^ ","^S",64,"^T",76,"^9","y__5486__auto__"]],"^1J",[["^ ","^S",153,"^T",74,"^9","n"]],"~i37",[["^ ","^S",22,"^T",75]],"^1:",[["^ ","^S",22,"^T",75,"^9","x"]]],"~i44",["^ ","~i6",[["^ ","^S",51,"^T",77,"^9","suffix"]]],"^19",["^ ","~i0",[["^ ","^S",0,"^T",79],["^ ","^S",0,"^T",79,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",79,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",79],["^ ","^S",126,"^T",79],["^ ","^S",0,"^T",80]],"^W",[["^ ","^S",137,"^T",79,"^9","truncate"]],"^1I",[["^ ","^S",146,"^T",79,"^9","x"]],"^1@",[["^ ","^S",0,"^T",80]],"^1:",[["^ ","^S",52,"^T",80,"^9","x"]]],"~i48",["^ ","~i0",[["^ ","^S",0,"^T",82],["^ ","^S",0,"^T",82,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",82,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",88,"^T",82],["^ ","^S",0,"^T",83],["^ ","^S",0,"^T",83]],"^1C",[["^ ","^S",67,"^T",82,"^9","cljs.core/IndexedSeq"]],"^1@",[["^ ","^S",99,"^T",82,"^9","truncate"]],"~i51",[["^ ","^S",108,"^T",82,"^9","x"]]],"^1P",["^ ","~i0",[["^ ","^S",0,"^T",85],["^ ","^S",0,"^T",85,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",85,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",99,"^T",85],["^ ","^S",0,"^T",86],["^ ","^S",0,"^T",86]],"^1C",[["^ ","^S",67,"^T",85,"^9","cljs.core/PersistentArrayMapSeq"]],"~i53",[["^ ","^S",110,"^T",85,"^9","truncate"]],"~i62",[["^ ","^S",119,"^T",85,"^9","x"]]],"^1<",["^ ","~i0",[["^ ","^S",0,"^T",88],["^ ","^S",0,"^T",88,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",88,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",85,"^T",88],["^ ","^S",0,"^T",89],["^ ","^S",0,"^T",89]],"^1C",[["^ ","^S",67,"^T",88,"^9","cljs.core/NodeSeq"]],"^1I",[["^ ","^S",96,"^T",88,"^9","truncate"]],"^1O",[["^ ","^S",105,"^T",88,"^9","x"]]],"~i57",["^ ","~i0",[["^ ","^S",0,"^T",91],["^ ","^S",0,"^T",91,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",91,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",82,"^T",91],["^ ","^S",0,"^T",92],["^ ","^S",0,"^T",92]],"^1C",[["^ ","^S",67,"^T",91,"^9","cljs.core/Cons"]],"^1G",[["^ ","^S",93,"^T",91,"^9","truncate"]],"~i45",[["^ ","^S",102,"^T",91,"^9","x"]]],"~i59",["^ ","~i0",[["^ ","^S",0,"^T",94],["^ ","^S",0,"^T",94,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",94,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",85,"^T",94],["^ ","^S",0,"^T",95],["^ ","^S",0,"^T",95]],"^1C",[["^ ","^S",67,"^T",94,"^9","cljs.core/LazySeq"]],"^1I",[["^ ","^S",96,"^T",94,"^9","truncate"]],"^1O",[["^ ","^S",105,"^T",94,"^9","x"]]],"~i61",["^ ","~i0",[["^ ","^S",0,"^T",97],["^ ","^S",0,"^T",97,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",97,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",97],["^ ","^S",116,"^T",97],["^ ","^S",0,"^T",98],["^ ","^S",0,"^T",98]],"^1D",[["^ ","^S",127,"^T",97,"^9","_"]],"^1?",[["^ ","^S",129,"^T",97,"^9","_"]]],"~i63",["^ ","~i0",[["^ ","^S",0,"^T",100],["^ ","^S",0,"^T",100,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",100,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",100],["^ ","^S",119,"^T",100],["^ ","^S",0,"^T",101]],"^1>",[["^ ","^S",130,"^T",100,"^9","truncate"]],"^1G",[["^ ","^S",139,"^T",100,"^9","col"]]],"~i64",["^ ","~i2",[["^ ","^S",0,"^T",101],["^ ","^S",69,"^T",101],["^ ","^S",73,"^T",101]],"~i3",[["^ ","^S",7,"^T",101,"^9","cljs.tools.reader.impl.inspect/inspect*-col"]],"^1=",[["^ ","^S",56,"^T",101,"^9","truncate"]],"^12",[["^ ","^S",65,"^T",101,"^9","col"]]],"~i66",["^ ","~i0",[["^ ","^S",0,"^T",103],["^ ","^S",0,"^T",103,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",103,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",103],["^ ","^S",118,"^T",103],["^ ","^S",0,"^T",104]],"^1D",[["^ ","^S",129,"^T",103,"^9","truncate"]],"^1J",[["^ ","^S",138,"^T",103,"^9","m"]]],"~i67",["^ ","~i2",[["^ ","^S",0,"^T",104],["^ ","^S",0,"^T",108]],"~i8",[["^ ","^S",4,"^T",104,"^9","len"]],"^U",[["^ ","^S",10,"^T",104]],"^Z",[["^ ","^S",10,"^T",104,"^9","cljs.core/count"]],"^1A",[["^ ","^S",26,"^T",104,"^9","m"]]],"~i68",["^ ","~i8",[["^ ","^S",4,"^T",105,"^9","n-shown"]],"^1=",[["^ ","^S",14,"^T",105],["^ ","^S",42,"^T",105]],"^1C",[["^ ","^S",32,"^T",105,"^9","truncate"]],"^18",[["^ ","^S",46,"^T",105,"^9","len"]]],"~i69",["^ ","~i8",[["^ ","^S",4,"^T",106,"^9","contents"]],"^10",[["^ ","^S",15,"^T",106]],"^15",[["^ ","^S",15,"^T",106,"^9","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^1B",[["^ ","^S",61,"^T",106,"^9","cljs.core/concat"]],"^18",[["^ ","^S",78,"^T",106]],"^1F",[["^ ","^S",78,"^T",106,"^9","cljs.core.take.cljs$core$IFn$_invoke$arity$2"]],"^1M",[["^ ","^S",123,"^T",106,"^9","n-shown"]],"^1T",[["^ ","^S",131,"^T",106,"^9","m"]]],"~i70",["^ ","~i8",[["^ ","^S",4,"^T",107,"^9","suffix"]],"^14",[["^ ","^S",13,"^T",107],["^ ","^S",32,"^T",107],["^ ","^S",39,"^T",107]],"^1A",[["^ ","^S",15,"^T",107]],"^16",[["^ ","^S",16,"^T",107,"^9","len"]],"^1D",[["^ ","^S",22,"^T",107,"^9","n-shown"]]],"~i71",["^ ","~i4",[["^ ","^S",0,"^T",108],["^ ","^S",74,"^T",108]],"~i5",[["^ ","^S",7,"^T",108,"^9","cljs.tools.reader.impl.inspect/inspect*-col"]],"^15",[["^ ","^S",56,"^T",108,"^9","truncate"]],"^1>",[["^ ","^S",65,"^T",108,"^9","contents"]],"^1I",[["^ ","^S",78,"^T",108,"^9","suffix"]]],"~i73",["^ ","~i0",[["^ ","^S",0,"^T",110],["^ ","^S",0,"^T",110,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",110,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",110],["^ ","^S",117,"^T",110],["^ ","^S",0,"^T",111]],"^1D",[["^ ","^S",128,"^T",110,"^9","truncate"]],"^1J",[["^ ","^S",137,"^T",110,"^9","col"]]],"~i74",["^ ","~i2",[["^ ","^S",0,"^T",111],["^ ","^S",69,"^T",111],["^ ","^S",74,"^T",111]],"~i3",[["^ ","^S",7,"^T",111,"^9","cljs.tools.reader.impl.inspect/inspect*-col"]],"^1=",[["^ ","^S",56,"^T",111,"^9","truncate"]],"^12",[["^ ","^S",65,"^T",111,"^9","col"]]],"~i76",["^ ","~i0",[["^ ","^S",0,"^T",113],["^ ","^S",0,"^T",113,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",113,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",113],["^ ","^S",124,"^T",113],["^ ","^S",0,"^T",114]],"^1E",[["^ ","^S",135,"^T",113,"^9","truncate"]],"^1H",[["^ ","^S",144,"^T",113,"^9","col"]]],"~i77",["^ ","~i2",[["^ ","^S",0,"^T",114],["^ ","^S",69,"^T",114],["^ ","^S",73,"^T",114]],"~i3",[["^ ","^S",7,"^T",114,"^9","cljs.tools.reader.impl.inspect/inspect*-col"]],"^1=",[["^ ","^S",56,"^T",114,"^9","truncate"]],"^12",[["^ ","^S",65,"^T",114,"^9","col"]]],"~i79",["^ ","~i0",[["^ ","^S",0,"^T",116],["^ ","^S",0,"^T",116,"^9","cljs.core/-add-method"],["^ ","^S",22,"^T",116,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",67,"^T",116],["^ ","^S",127,"^T",116],["^ ","^S",0,"^T",117]],"^W",[["^ ","^S",138,"^T",116,"^9","truncate"]],"^1I",[["^ ","^S",147,"^T",116,"^9","x"]]],"~i80",["^ ","~i2",[["^ ","^S",0,"^T",117]],"~i3",[["^ ","^S",7,"^T",117,"^9","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic"]],"^R",[["^ ","^S",111,"^T",117]],"^[",[["^ ","^S",111,"^T",117,"^9","cljs.core/type"]],"^1=",[["^ ","^S",126,"^T",117,"^9","x"]]],"~i82",["^ ","~i0",[["^ ","^S",0,"^T",119],["^ ","^S",0,"^T",119],["^ ","^S",41,"^T",126],["^ ","^S",90,"^T",126,"^9","var_args"],["^ ","^S",0,"^T",127],["^ ","^S",0,"^T",127],["^ ","^S",4,"^T",127,"^9","G__29821"],["^ ","^S",15,"^T",127],["^ ","^S",15,"^T",127],["^ ","^S",0,"^T",128],["^ ","^S",0,"^T",128],["^ ","^S",8,"^T",128,"^9","G__29821"],["^ ","^S",5,"^T",129],["^ ","^S",0,"^T",130],["^ ","^S",7,"^T",130,"^9","cljs.tools.reader.impl.inspect/inspect"],["^ ","^S",76,"^T",130],["^ ","^S",77,"^T",130],["^ ","^S",87,"^T",130],["^ ","^S",5,"^T",133],["^ ","^S",0,"^T",134],["^ ","^S",7,"^T",134,"^9","cljs.tools.reader.impl.inspect/inspect"],["^ ","^S",76,"^T",134],["^ ","^S",77,"^T",134],["^ ","^S",87,"^T",134],["^ ","^S",93,"^T",134],["^ ","^S",94,"^T",134],["^ ","^S",104,"^T",134],["^ ","^S",0,"^T",138],["^ ","^S",6,"^T",138],["^ ","^S",11,"^T",138,"^9","js/Error"],["^ ","^S",17,"^T",138],["^ ","^S",18,"^T",138],["^ ","^S",80,"^T",138],["^ ","^S",80,"^T",138],["^ ","^S",0,"^T",143],["^ ","^S",0,"^T",143],["^ ","^S",71,"^T",143],["^ ","^S",0,"^T",144],["^ ","^S",0,"^T",147],["^ ","^S",0,"^T",147],["^ ","^S",71,"^T",147],["^ ","^S",0,"^T",148],["^ ","^S",0,"^T",151],["^ ","^S",0,"^T",151],["^ ","^S",65,"^T",151],["^ ","^S",0,"^T",153]],"~i6",[["^ ","^S",0,"^T",126,"^9","cljs.tools.reader.impl.inspect/inspect"],["^ ","^S",0,"^T",143,"^9","cljs.tools.reader.impl.inspect/inspect"],["^ ","^S",0,"^T",147,"^9","cljs.tools.reader.impl.inspect/inspect"],["^ ","^S",0,"^T",151,"^9","cljs.tools.reader.impl.inspect/inspect"]]],"~i88",["^ ","~i4",[["^ ","^S",82,"^T",143,"^9","x"]],"~i7",[["^ ","^S",0,"^T",144],["^ ","^S",160,"^T",144],["^ ","^S",226,"^T",144]],"~i8",[["^ ","^S",8,"^T",144,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",85,"^T",144,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",171,"^T",144,"^9","cljs.tools.reader.impl.inspect/inspect*"]],"^17",[["^ ","^S",166,"^T",144,"^9","x"],["^ ","^S",232,"^T",144,"^9","x"]]],"~i89",["^ ","~i4",[["^ ","^S",82,"^T",147,"^9","truncate"]],"^Z",[["^ ","^S",91,"^T",147,"^9","x"]],"^1=",[["^ ","^S",0,"^T",148]],"^10",[["^ ","^S",8,"^T",148,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",85,"^T",148,"^9","cljs.tools.reader.impl.inspect/inspect*"],["^ ","^S",174,"^T",148,"^9","cljs.tools.reader.impl.inspect/inspect*"]],"^1D",[["^ ","^S",160,"^T",148,"^9","truncate"],["^ ","^S",229,"^T",148,"^9","truncate"]],"^1J",[["^ ","^S",169,"^T",148,"^9","x"],["^ ","^S",238,"^T",148,"^9","x"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["~:macro","^?"],1516731430000,["^J","goog/math/math.js"],1516731431000,["^J","goog/array/array.js"],1516731431000,["^J","goog/debug/error.js"],1516731431000,["^J","goog/dom/nodetype.js"],1516731431000,["^J","cljs/tools/reader/impl/inspect.cljs"],1516731429000,["^J","goog/object/object.js"],1516731431000,"~:SHADOW-TIMESTAMP",1516731432000,["^J","goog/math/long.js"],1516731431000,["^J","goog/functions/functions.js"],1516731431000,["^J","goog/structs/map.js"],1516731431000,["^J","goog/asserts/asserts.js"],1516731431000,["^J","goog/uri/uri.js"],1516731431000,["^J","goog/base.js"],1516731431000,["^J","goog/structs/structs.js"],1516731431000,["^J","goog/string/string.js"],1516731431000,["^J","goog/reflect/reflect.js"],1516731431000,["^J","goog/string/stringbuffer.js"],1516731431000,["^J","goog/iter/iter.js"],1516731431000,["^J","cljs/core.cljs"],1516731430000,["^J","goog/math/integer.js"],1516731431000,["^J","goog/uri/utils.js"],1516731431000]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ "],"^6",null,"^7",["^8",[]],"^9","^:","^=",null,"^>",["^ ","^?","^?","^@","^@"],"^A",["^8",[]],"~:shadow/js-access-global",["^8",["Error"]],"^B",null,"~:defs",["^ ","~$inspect*",["^ ","^9","~$cljs.tools.reader.impl.inspect/inspect*","~:file","cljs/tools/reader/impl/inspect.cljs","~:line",37,"~:column",1,"~:end-line",37,"~:end-column",19,"^5",["^ ","^2F","cljs/tools/reader/impl/inspect.cljs","^2G",37,"^2H",11,"^2I",37,"^2J",19],"~:tag","~$cljs.core/MultiFn"],"~$inspect*-col",["^ ","~:protocol-inline",null,"^5",["^ ","^2F","cljs/tools/reader/impl/inspect.cljs","^2G",13,"^2H",8,"^2I",13,"^2J",20,"~:private",true,"~:arglists",["^E",["~$quote",["^E",[["~$truncate","~$col","~$start","~$end"]]]]]],"^2O",true,"^9","~$cljs.tools.reader.impl.inspect/inspect*-col","~:variadic",false,"^2F","cljs/tools/reader/impl/inspect.cljs","^2J",20,"~:method-params",["^E",[["^2R","^2S","^2T","^2U"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^2H",1,"^2G",13,"^2I",13,"~:max-fixed-arity",4,"~:fn-var",true,"^2P",["^E",["^2Q",["^E",[["^2R","^2S","^2T","^2U"]]]]]],"~$dispatch-inspect",["^ ","^2N",null,"^5",["^ ","^2F","cljs/tools/reader/impl/inspect.cljs","^2G",21,"^2H",8,"^2I",21,"^2J",24,"^2O",true,"^2P",["^E",["^2Q",["^E",[["~$_","~$x"]]]]]],"^2O",true,"^9","~$cljs.tools.reader.impl.inspect/dispatch-inspect","^2W",false,"^2F","cljs/tools/reader/impl/inspect.cljs","^2J",24,"^2X",["^E",[["~$_","~$x"]]],"^2Y",null,"^2Z",["^E",[null,null]],"^2H",1,"^2G",21,"^2I",21,"^2[",2,"^30",true,"^2P",["^E",["^2Q",["^E",[["~$_","~$x"]]]]]],"~$inspect",["^ ","^2N",null,"^5",["^ ","^2F","cljs/tools/reader/impl/inspect.cljs","^2G",83,"^2H",7,"^2I",83,"^2J",14,"^2P",["^E",["^2Q",["^E",[["~$x"],["^2R","~$x"]]]]],"~:doc","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection.","~:top-fn",["^ ","^2W",false,"^2[",2,"^2X",["^E",[["~$x"],["^2R","~$x"]]],"^2P",["^E",[["~$x"],["^2R","~$x"]]],"^2Z",["^E",[null,null]]]],"^9","~$cljs.tools.reader.impl.inspect/inspect","^2W",false,"^2F","cljs/tools/reader/impl/inspect.cljs","^2J",14,"^35",["^ ","^2W",false,"^2[",2,"^2X",["^E",[["~$x"],["^2R","~$x"]]],"^2P",["^E",[["~$x"],["^2R","~$x"]]],"^2Z",["^E",[null,null]]],"^2X",["^E",[["~$x"],["^2R","~$x"]]],"^2Y",null,"^2Z",["^E",[null,null]],"^2H",1,"^2G",83,"^2I",83,"^2[",2,"^30",true,"^2P",["^E",[["~$x"],["^2R","~$x"]]],"^34","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection."]],"^C",["^ ","^?","^?"],"~:cljs.analyzer/constants",["^ ","^A",["^8",["~:default","~:string","~:vector","~:strable","~:list","~:nil","~:set","~:hierarchy","~:map"]],"~:order",["^3=","^39","^3;","^3:","^3<","^3@","^3>","^38","^3?"]],"^G",["^ "],"^H",["^@","^?"]],"^<","^:","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2>",[["^3D","~:static-fns"],true,["^3D","~:elide-asserts"],false,["^3D","~:optimize-constants"],null,["^3D","~:emit-constants"],null,["^3D","~:infer-externs"],true,["^3D","^O"],null,["~:js-options","~:js-provider"],"~:require",["~:mode"],"~:dev",["^3D","~:fn-invoke-direct"],null,["^3D","^Q"],"/dev/null"]]]