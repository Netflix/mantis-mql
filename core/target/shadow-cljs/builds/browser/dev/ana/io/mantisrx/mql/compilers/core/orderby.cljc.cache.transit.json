["^ ","~:output",["^ ","~:js","goog.provide('io.mantisrx.mql.compilers.core.orderby');\ngoog.require('cljs.core');\n/**\n * Transforms a property to a function for use in sorting.\n * \n * Usage: (order->fn property)\n * \n * prop: A property function as returned by prop->fn.\n * direction: ASC or DESC for ascending or descending sort.\n * \n * Returns a comparator function intended to be used with rx/sort to sort\n * an observable. It can however be used anywhere a comparator would be.\n */\nio.mantisrx.mql.compilers.core.orderby.order__GT_fn = (function io$mantisrx$mql$compilers$core$orderby$order__GT_fn(var_args){\nvar G__31641 = arguments.length;\nswitch (G__31641) {\ncase 1:\nreturn io.mantisrx.mql.compilers.core.orderby.order__GT_fn.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn io.mantisrx.mql.compilers.core.orderby.order__GT_fn.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nio.mantisrx.mql.compilers.core.orderby.order__GT_fn.cljs$core$IFn$_invoke$arity$1 = (function (prop){\nreturn io.mantisrx.mql.compilers.core.orderby.order__GT_fn.cljs$core$IFn$_invoke$arity$2(prop,\"asc\");\n});\n\nio.mantisrx.mql.compilers.core.orderby.order__GT_fn.cljs$core$IFn$_invoke$arity$2 = (function (prop,direction){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"orderby\",\"orderby\",-1623567857),prop,new cljs.core.Keyword(null,\"order-comparator\",\"order-comparator\",1731926321),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"desc\",clojure.string.lower_case(direction)))?cljs.core.comparator(cljs.core._GT_):cljs.core.compare)], null);\n});\n\nio.mantisrx.mql.compilers.core.orderby.order__GT_fn.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ "],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$io.mantisrx.mql.compilers.core.orderby","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^?","~$goog","^@"],"~:seen",["^8",[]],"~:uses",null,"~:require-macros",["^ ","^?","^?"],"~:form",["~#list",["~$ns","^:"]],"~:js-deps",["^ "],"~:deps",["^@","^?"]],"^<","^:","~:resource-id",["~:shadow.build.classpath/resource","io/mantisrx/mql/compilers/core/orderby.cljc"],"~:compiled-at",1548711933755,"~:resource-name","io/mantisrx/mql/compilers/core/orderby.cljc","~:warnings",[],"~:source","(ns io.mantisrx.mql.compilers.core.orderby)\n\n(defn order->fn\n  \"Transforms a property to a function for use in sorting.\n\n   Usage: (order->fn property)\n\n   prop: A property function as returned by prop->fn.\n   direction: ASC or DESC for ascending or descending sort.\n\n   Returns a comparator function intended to be used with rx/sort to sort\n   an observable. It can however be used anywhere a comparator would be.\"\n  ([prop]\n   (order->fn prop \"asc\"))\n  ([prop direction]\n   {:orderby prop\n    :order-comparator (if (= \"desc\" (clojure.string/lower-case direction))\n                        (comparator >)\n                        compare)}))\n","~:reader-features",["^8",["~:cljs"]],"~:source-map",["^ ","~i2",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^R",0,"^S",2],["^ ","^R",54,"^S",13],["^ ","^R",116,"^S",13,"^9","var_args"],["^ ","^R",0,"^S",14],["^ ","^R",0,"^S",14],["^ ","^R",4,"^S",14,"^9","G__31641"],["^ ","^R",15,"^S",14],["^ ","^R",15,"^S",14],["^ ","^R",0,"^S",15],["^ ","^R",0,"^S",15],["^ ","^R",8,"^S",15,"^9","G__31641"],["^ ","^R",5,"^S",16],["^ ","^R",0,"^S",17],["^ ","^R",7,"^S",17,"^9","io.mantisrx.mql.compilers.core.orderby/order->fn"],["^ ","^R",89,"^S",17],["^ ","^R",90,"^S",17],["^ ","^R",100,"^S",17],["^ ","^R",5,"^S",20],["^ ","^R",0,"^S",21],["^ ","^R",7,"^S",21,"^9","io.mantisrx.mql.compilers.core.orderby/order->fn"],["^ ","^R",89,"^S",21],["^ ","^R",90,"^S",21],["^ ","^R",100,"^S",21],["^ ","^R",106,"^S",21],["^ ","^R",107,"^S",21],["^ ","^R",117,"^S",21],["^ ","^R",0,"^S",25],["^ ","^R",6,"^S",25],["^ ","^R",11,"^S",25,"^9","js/Error"],["^ ","^R",17,"^S",25],["^ ","^R",18,"^S",25],["^ ","^R",80,"^S",25],["^ ","^R",80,"^S",25],["^ ","^R",0,"^S",30],["^ ","^R",0,"^S",30],["^ ","^R",84,"^S",30],["^ ","^R",0,"^S",31],["^ ","^R",0,"^S",34],["^ ","^R",0,"^S",34],["^ ","^R",84,"^S",34],["^ ","^R",0,"^S",35],["^ ","^R",0,"^S",35],["^ ","^R",50,"^S",35],["^ ","^R",115,"^S",35],["^ ","^R",0,"^S",38],["^ ","^R",0,"^S",38],["^ ","^R",78,"^S",38],["^ ","^R",0,"^S",40]],"~i6",[["^ ","^R",0,"^S",13,"^9","io.mantisrx.mql.compilers.core.orderby/order->fn"],["^ ","^R",0,"^S",30,"^9","io.mantisrx.mql.compilers.core.orderby/order->fn"],["^ ","^R",0,"^S",34,"^9","io.mantisrx.mql.compilers.core.orderby/order->fn"],["^ ","^R",0,"^S",38,"^9","io.mantisrx.mql.compilers.core.orderby/order->fn"]]],"~i12",["^ ","~i4",[["^ ","^R",95,"^S",30,"^9","prop"]]],"~i13",["^ ","~i3",[["^ ","^R",0,"^S",31],["^ ","^R",94,"^S",31]],"~i4",[["^ ","^R",7,"^S",31,"^9","io.mantisrx.mql.compilers.core.orderby.order__GT_fn.cljs$core$IFn$_invoke$arity$2"]],"~i14",[["^ ","^R",89,"^S",31,"^9","prop"]]],"^V",["^ ","~i4",[["^ ","^R",95,"^S",34,"^9","prop"]],"~i9",[["^ ","^R",100,"^S",34,"^9","direction"]]],"~i15",["^ ","^U",[["^ ","^R",110,"^S",35,"^9","prop"]]],"~i16",["^ ","~i22",[["^ ","^R",192,"^S",35]],"~i26",[["^ ","^R",194,"^S",35],["^ ","^R",239,"^S",35]],"~i27",[["^ ","^R",194,"^S",35,"^9","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^R",246,"^S",35]],"~i37",[["^ ","^R",246,"^S",35,"^9","clojure.string/lower-case"]],"~i63",[["^ ","^R",272,"^S",35,"^9","direction"]]],"~i17",["^ ","~i24",[["^ ","^R",285,"^S",35]],"~i25",[["^ ","^R",285,"^S",35,"^9","cljs.core/comparator"]],"^10",[["^ ","^R",306,"^S",35,"^9","cljs.core/>"]]],"~i18",["^ ","^14",[["^ ","^R",322,"^S",35,"^9","cljs.core/compare"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^?"],1516731430000,["^J","goog/math/math.js"],1516731431000,["^J","goog/array/array.js"],1516731431000,["^J","goog/debug/error.js"],1516731431000,["^J","goog/dom/nodetype.js"],1516731431000,["^J","goog/object/object.js"],1516731431000,"~:SHADOW-TIMESTAMP",1516731432000,["^J","goog/math/long.js"],1516731431000,["^J","goog/functions/functions.js"],1516731431000,["^J","goog/structs/map.js"],1516731431000,["^J","goog/asserts/asserts.js"],1516731431000,["^J","goog/uri/uri.js"],1516731431000,["^J","goog/base.js"],1516731431000,["^J","goog/structs/structs.js"],1516731431000,["^J","goog/string/string.js"],1516731431000,["^J","goog/reflect/reflect.js"],1516731431000,["^J","goog/string/stringbuffer.js"],1516731431000,["^J","io/mantisrx/mql/compilers/core/orderby.cljc"],[1526326473000],["^J","goog/iter/iter.js"],1516731431000,["^J","cljs/core.cljs"],1516731430000,["^J","goog/math/integer.js"],1516731431000,["^J","goog/uri/utils.js"],1516731431000]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ "],"^6",null,"^7",["^8",[]],"^9","^:","^=",null,"^>",["^ ","^?","^?","^@","^@"],"^A",["^8",[]],"~:shadow/js-access-global",["^8",["Error"]],"^B",null,"~:defs",["^ ","~$order->fn",["^ ","~:protocol-inline",null,"^5",["^ ","~:file","io/mantisrx/mql/compilers/core/orderby.cljc","~:line",3,"~:column",7,"~:end-line",3,"~:end-column",16,"~:arglists",["^E",["~$quote",["^E",[["~$prop"],["^1H","~$direction"]]]]],"~:doc","Transforms a property to a function for use in sorting.\n\n   Usage: (order->fn property)\n\n   prop: A property function as returned by prop->fn.\n   direction: ASC or DESC for ascending or descending sort.\n\n   Returns a comparator function intended to be used with rx/sort to sort\n   an observable. It can however be used anywhere a comparator would be.","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",2,"~:method-params",["^E",[["^1H"],["^1H","^1I"]]],"^1F",["^E",[["^1H"],["^1H","^1I"]]],"~:arglists-meta",["^E",[null,null]]]],"^9","~$io.mantisrx.mql.compilers.core.orderby/order->fn","^1L",false,"^1A","io/mantisrx/mql/compilers/core/orderby.cljc","^1E",16,"^1K",["^ ","^1L",false,"^1M",2,"^1N",["^E",[["^1H"],["^1H","^1I"]]],"^1F",["^E",[["^1H"],["^1H","^1I"]]],"^1O",["^E",[null,null]]],"^1N",["^E",[["^1H"],["^1H","^1I"]]],"~:protocol-impl",null,"^1O",["^E",[null,null]],"^1C",1,"^1B",3,"^1D",3,"^1M",2,"~:fn-var",true,"^1F",["^E",[["^1H"],["^1H","^1I"]]],"^1J","Transforms a property to a function for use in sorting.\n\n   Usage: (order->fn property)\n\n   prop: A property function as returned by prop->fn.\n   direction: ASC or DESC for ascending or descending sort.\n\n   Returns a comparator function intended to be used with rx/sort to sort\n   an observable. It can however be used anywhere a comparator would be."]],"^C",["^ ","^?","^?"],"~:cljs.analyzer/constants",["^ ","^A",["^8",["~:orderby","~:order-comparator"]],"~:order",["^1T","^1U"]],"^G",["^ "],"^H",["^@","^?"]],"^<","^:","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^19",[["^1Y","~:static-fns"],true,["^1Y","~:elide-asserts"],false,["^1Y","~:optimize-constants"],null,["^1Y","~:emit-constants"],null,["^1Y","~:infer-externs"],true,["^1Y","^O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^1Y","~:fn-invoke-direct"],null,["^1Y","^Q"],"/dev/null"]]]