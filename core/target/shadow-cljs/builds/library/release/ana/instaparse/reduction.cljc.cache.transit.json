["^ ","~:output",["^ ","~:js","goog.provide('instaparse.reduction');\ninstaparse.reduction.singleton_QMARK_ = (function instaparse$reduction$singleton_QMARK_(s){\nreturn (cljs.core.seq(s)) && (cljs.core.not(cljs.core.next(s)));\n});\ninstaparse.reduction.red = (function instaparse$reduction$red(parser,f){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"red\",\"red\",-969428204),f);\n});\ninstaparse.reduction.raw_non_terminal_reduction = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reduction-type\",\"reduction-type\",-488293450),new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272)], null);\ninstaparse.reduction.HiccupNonTerminalReduction = (function instaparse$reduction$HiccupNonTerminalReduction(key){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reduction-type\",\"reduction-type\",-488293450),new cljs.core.Keyword(null,\"hiccup\",\"hiccup\",1218876238),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),key], null);\n});\ninstaparse.reduction.EnliveNonTerminalReduction = (function instaparse$reduction$EnliveNonTerminalReduction(key){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reduction-type\",\"reduction-type\",-488293450),new cljs.core.Keyword(null,\"enlive\",\"enlive\",1679023921),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),key], null);\n});\ninstaparse.reduction.reduction_types = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"hiccup\",\"hiccup\",1218876238),instaparse.reduction.HiccupNonTerminalReduction,new cljs.core.Keyword(null,\"enlive\",\"enlive\",1679023921),instaparse.reduction.EnliveNonTerminalReduction], null);\ninstaparse.reduction.node_builders = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"enlive\",\"enlive\",1679023921),(function (tag,item){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"content\",\"content\",15833224),(function (){var x__6080__auto__ = item;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__6080__auto__);\n})()], null);\n}),new cljs.core.Keyword(null,\"hiccup\",\"hiccup\",1218876238),(function (tag,item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,item], null);\n})], null);\ninstaparse.reduction.standard_non_terminal_reduction = new cljs.core.Keyword(null,\"hiccup\",\"hiccup\",1218876238);\ninstaparse.reduction.apply_reduction = (function instaparse$reduction$apply_reduction(f,result){\nvar G__29299 = new cljs.core.Keyword(null,\"reduction-type\",\"reduction-type\",-488293450).cljs$core$IFn$_invoke$arity$1(f);\nvar G__29299__$1 = (((G__29299 instanceof cljs.core.Keyword))?G__29299.fqn:null);\nswitch (G__29299__$1) {\ncase \"raw\":\nreturn instaparse.auto_flatten_seq.conj_flat(instaparse.auto_flatten_seq.EMPTY,result);\n\nbreak;\ncase \"hiccup\":\nreturn instaparse.auto_flatten_seq.convert_afs_to_vec(instaparse.auto_flatten_seq.conj_flat(instaparse.auto_flatten_seq.auto_flatten_seq(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(f)], null)),result));\n\nbreak;\ncase \"enlive\":\nvar content = instaparse.auto_flatten_seq.conj_flat(instaparse.auto_flatten_seq.EMPTY,result);\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(f),new cljs.core.Keyword(null,\"content\",\"content\",15833224),(((cljs.core.count(content) === (0)))?null:content)], null);\n\nbreak;\ndefault:\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(result) : f.call(null,result));\n\n}\n});\ninstaparse.reduction.apply_standard_reductions = (function instaparse$reduction$apply_standard_reductions(var_args){\nvar G__29335 = arguments.length;\nswitch (G__29335) {\ncase 1:\nreturn instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ninstaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$1 = (function (grammar){\nreturn instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2(instaparse.reduction.standard_non_terminal_reduction,grammar);\n});\n\ninstaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2 = (function (reduction_type,grammar){\nvar temp__5455__auto__ = (instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1 ? instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1(reduction_type) : instaparse.reduction.reduction_types.call(null,reduction_type));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar reduction = temp__5455__auto__;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__6008__auto__ = ((function (reduction,temp__5455__auto__){\nreturn (function instaparse$reduction$iter__29336(s__29337){\nreturn (new cljs.core.LazySeq(null,((function (reduction,temp__5455__auto__){\nreturn (function (){\nvar s__29337__$1 = s__29337;\nwhile(true){\nvar temp__5457__auto__ = cljs.core.seq(s__29337__$1);\nif(temp__5457__auto__){\nvar s__29337__$2 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__29337__$2)){\nvar c__6006__auto__ = cljs.core.chunk_first(s__29337__$2);\nvar size__6007__auto__ = cljs.core.count(c__6006__auto__);\nvar b__29339 = cljs.core.chunk_buffer(size__6007__auto__);\nif((function (){var i__29338 = (0);\nwhile(true){\nif((i__29338 < size__6007__auto__)){\nvar vec__29340 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6006__auto__,i__29338);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29340,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29340,(1),null);\ncljs.core.chunk_append(b__29339,(cljs.core.truth_(new cljs.core.Keyword(null,\"red\",\"red\",-969428204).cljs$core$IFn$_invoke$arity$1(v))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,new cljs.core.Keyword(null,\"red\",\"red\",-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null)));\n\nvar G__29347 = (i__29338 + (1));\ni__29338 = G__29347;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__29339),instaparse$reduction$iter__29336(cljs.core.chunk_rest(s__29337__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__29339),null);\n}\n} else {\nvar vec__29343 = cljs.core.first(s__29337__$2);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29343,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29343,(1),null);\nreturn cljs.core.cons((cljs.core.truth_(new cljs.core.Keyword(null,\"red\",\"red\",-969428204).cljs$core$IFn$_invoke$arity$1(v))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,new cljs.core.Keyword(null,\"red\",\"red\",-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null)),instaparse$reduction$iter__29336(cljs.core.rest(s__29337__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(reduction,temp__5455__auto__))\n,null,null));\n});})(reduction,temp__5455__auto__))\n;\nreturn iter__6008__auto__(grammar);\n})());\n} else {\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid output format \",reduction_type,\". Use :enlive or :hiccup.\"], 0));\n}\n});\n\ninstaparse.reduction.apply_standard_reductions.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ "],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$instaparse.reduction","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$instaparse.auto-flatten-seq","^?","~$afs","^?","~$instaparse.util","^A","~$cljs.core","^B","~$goog","^C"],"~:seen",["^8",["~:require"]],"~:uses",["^ ","~$throw-illegal-argument-exception","^A"],"~:require-macros",["^ ","^B","^B"],"~:form",["~#list",["~$ns","^:",["^J",["^E",["^?","~:as","^@"],["^A","~:refer",["^G"]]]]]],"~:flags",["^ ","^E",["^8",[]]],"~:js-deps",["^ "],"~:deps",["^C","^B","^?","^A"]],"^<","^:","~:resource-id",["~:shadow.build.classpath/resource","instaparse/reduction.cljc"],"~:compiled-at",1516732930584,"~:resource-name","instaparse/reduction.cljc","~:warnings",[],"~:source","(ns instaparse.reduction\r\n  (:require [instaparse.auto-flatten-seq :as afs]\r\n            [instaparse.util :refer [throw-illegal-argument-exception]]))\r\n\r\n;; utilities\r\n\r\n(defn singleton? [s]\r\n  (and (seq s) (not (next s))))\r\n\r\n;; red is a reduction combinator for expert use only\r\n;; because it is used internally to control the tree tags that\r\n;; are displayed, so adding a different reduction would change\r\n;; that behavior.\r\n\r\n(defn red [parser f] (assoc parser :red f))\r\n\r\n;; Flattening and reductions\r\n\r\n(def raw-non-terminal-reduction {:reduction-type :raw})\r\n\r\n(defn HiccupNonTerminalReduction [key]\r\n  {:reduction-type :hiccup :key key})\r\n\r\n(defn EnliveNonTerminalReduction [key] \r\n  {:reduction-type :enlive, :key key})\r\n\r\n(def ^:constant reduction-types \r\n  {:hiccup HiccupNonTerminalReduction\r\n   :enlive EnliveNonTerminalReduction})\r\n                    \r\n(def ^:constant node-builders\r\n  ; A map of functions for building a node that only has one item\r\n  ; These functions are used in total-parse mode to build failure nodes\r\n  {:enlive (fn [tag item] {:tag tag :content (list item)})\r\n   :hiccup (fn [tag item] [tag item])})\r\n\r\n(def standard-non-terminal-reduction :hiccup)\r\n\r\n(defn apply-reduction [f result]\r\n  (case (:reduction-type f)\r\n    :raw (afs/conj-flat afs/EMPTY result)               \r\n    :hiccup (afs/convert-afs-to-vec (afs/conj-flat (afs/auto-flatten-seq [(:key f)]) result))\r\n    :enlive \r\n    (let [content (afs/conj-flat afs/EMPTY result)]\r\n      {:tag (:key f), :content (if (zero? (count content)) nil content)})\r\n    (f result)))\r\n    \r\n(defn apply-standard-reductions \r\n  ([grammar] (apply-standard-reductions standard-non-terminal-reduction grammar))\r\n  ([reduction-type grammar]\r\n    (if-let [reduction (reduction-types reduction-type)]\r\n      (into {} (for [[k v] grammar]\r\n                 (if (:red v) [k v]\r\n                   [k (assoc v :red (reduction k))])))\r\n      (throw-illegal-argument-exception\r\n        \"Invalid output format \" reduction-type \". Use :enlive or :hiccup.\"))))\r\n","~:reader-features",["^8",["~:cljs"]],"~:source-map",["^ ","~i6",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",1],["^ ","^Z",40,"^[",1],["^ ","^Z",0,"^[",2]],"~i6",[["^ ","^Z",0,"^[",1,"^9","instaparse.reduction/singleton?"]],"~i18",[["^ ","^Z",88,"^[",1,"^9","s"]]],"~i7",["^ ","~i2",[["^ ","^Z",0,"^[",2]],"~i7",[["^ ","^Z",8,"^[",2]],"~i8",[["^ ","^Z",8,"^[",2,"^9","cljs.core/seq"]],"~i12",[["^ ","^Z",22,"^[",2,"^9","s"]],"~i15",[["^ ","^Z",30,"^[",2]],"~i16",[["^ ","^Z",30,"^[",2,"^9","cljs.core/not"]],"~i20",[["^ ","^Z",44,"^[",2]],"~i21",[["^ ","^Z",44,"^[",2,"^9","cljs.core/next"]],"~i26",[["^ ","^Z",59,"^[",2,"^9","s"]]],"~i14",["^ ","~i0",[["^ ","^Z",0,"^[",4],["^ ","^Z",27,"^[",4],["^ ","^Z",0,"^[",5]],"~i6",[["^ ","^Z",0,"^[",4,"^9","instaparse.reduction/red"]],"~i11",[["^ ","^Z",62,"^[",4,"^9","parser"]],"^10",[["^ ","^Z",69,"^[",4,"^9","f"]],"^15",[["^ ","^Z",0,"^[",5],["^ ","^Z",60,"^[",5]],"~i22",[["^ ","^Z",7,"^[",5,"^9","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"~i28",[["^ ","^Z",53,"^[",5,"^9","parser"]],"~i40",[["^ ","^Z",111,"^[",5,"^9","f"]]],"^10",["^ ","~i0",[["^ ","^Z",0,"^[",7],["^ ","^Z",50,"^[",7],["^ ","^Z",93,"^[",7],["^ ","^Z",166,"^[",7]],"~i5",[["^ ","^Z",0,"^[",7,"^9","instaparse.reduction/raw-non-terminal-reduction"]]],"^14",["^ ","~i0",[["^ ","^Z",0,"^[",8],["^ ","^Z",50,"^[",8],["^ ","^Z",0,"^[",9],["^ ","^Z",0,"^[",9],["^ ","^Z",50,"^[",9],["^ ","^Z",123,"^[",9],["^ ","^Z",180,"^[",9]],"~i6",[["^ ","^Z",0,"^[",8,"^9","instaparse.reduction/HiccupNonTerminalReduction"]],"~i34",[["^ ","^Z",108,"^[",8,"^9","key"]]],"^15",["^ ","~i32",[["^ ","^Z",232,"^[",9,"^9","key"]]],"~i23",["^ ","~i0",[["^ ","^Z",0,"^[",11],["^ ","^Z",50,"^[",11],["^ ","^Z",0,"^[",12],["^ ","^Z",0,"^[",12],["^ ","^Z",50,"^[",12],["^ ","^Z",123,"^[",12],["^ ","^Z",180,"^[",12]],"~i6",[["^ ","^Z",0,"^[",11,"^9","instaparse.reduction/EnliveNonTerminalReduction"]],"^1<",[["^ ","^Z",108,"^[",11,"^9","key"]]],"~i24",["^ ","~i33",[["^ ","^Z",232,"^[",12,"^9","key"]]],"^16",["^ ","~i0",[["^ ","^Z",0,"^[",14],["^ ","^Z",39,"^[",14],["^ ","^Z",82,"^[",14],["^ ","^Z",187,"^[",14]],"^13",[["^ ","^Z",0,"^[",14,"^9","instaparse.reduction/reduction-types"]]],"~i27",["^ ","^18",[["^ ","^Z",139,"^[",14,"^9","instaparse.reduction/HiccupNonTerminalReduction"]]],"^1:",["^ ","^18",[["^ ","^Z",244,"^[",14,"^9","instaparse.reduction/EnliveNonTerminalReduction"]]],"~i30",["^ ","~i0",[["^ ","^Z",0,"^[",15],["^ ","^Z",37,"^[",15],["^ ","^Z",80,"^[",15],["^ ","^Z",3,"^[",19]],"^13",[["^ ","^Z",0,"^[",15,"^9","instaparse.reduction/node-builders"]]],"^1@",["^ ","^18",[["^ ","^Z",137,"^[",15],["^ ","^Z",0,"^[",16],["^ ","^Z",0,"^[",16],["^ ","^Z",50,"^[",16],["^ ","^Z",106,"^[",16]],"^13",[["^ ","^Z",148,"^[",15,"^9","tag"]],"^14",[["^ ","^Z",152,"^[",15,"^9","item"]],"^1=",[["^ ","^Z",102,"^[",16,"^9","tag"]],"~i45",[["^ ","^Z",163,"^[",16],["^ ","^Z",180,"^[",16,"^9","x__6080__auto__"],["^ ","^Z",0,"^[",17],["^ ","^Z",0,"^[",17],["^ ","^Z",7,"^[",17,"^9","cljs.core/-conj"],["^ ","^Z",44,"^[",17,"^9","x__6080__auto__"]],"~i51",[["^ ","^Z",198,"^[",16,"^9","item"]]],"^1<",["^ ","^18",[["^ ","^Z",60,"^[",19],["^ ","^Z",0,"^[",20],["^ ","^Z",0,"^[",20]],"^13",[["^ ","^Z",71,"^[",19,"^9","tag"]],"^14",[["^ ","^Z",75,"^[",19,"^9","item"]],"^1A",[["^ ","^Z",90,"^[",20,"^9","tag"]],"~i31",[["^ ","^Z",94,"^[",20,"^9","item"]]],"~i36",["^ ","~i0",[["^ ","^Z",0,"^[",22],["^ ","^Z",55,"^[",22]],"~i5",[["^ ","^Z",0,"^[",22,"^9","instaparse.reduction/standard-non-terminal-reduction"]]],"~i38",["^ ","~i0",[["^ ","^Z",0,"^[",23],["^ ","^Z",39,"^[",23],["^ ","^Z",0,"^[",24]],"~i6",[["^ ","^Z",0,"^[",23,"^9","instaparse.reduction/apply-reduction"]],"^1>",[["^ ","^Z",86,"^[",23,"^9","f"]],"~i25",[["^ ","^Z",88,"^[",23,"^9","result"]]],"~i39",["^ ","~i2",[["^ ","^Z",0,"^[",24],["^ ","^Z",4,"^[",24,"^9","G__29299"],["^ ","^Z",4,"^[",25,"^9","G__29299"],["^ ","^Z",19,"^[",25],["^ ","^Z",21,"^[",25],["^ ","^Z",22,"^[",25,"^9","G__29299"],["^ ","^Z",42,"^[",25,"^9","cljs.core/Keyword"],["^ ","^Z",75,"^[",25],["^ ","^Z",0,"^[",26],["^ ","^Z",0,"^[",26],["^ ","^Z",8,"^[",26,"^9","G__29299"],["^ ","^Z",5,"^[",27],["^ ","^Z",5,"^[",31],["^ ","^Z",5,"^[",35]],"~i8",[["^ ","^Z",15,"^[",24],["^ ","^Z",15,"^[",24]],"^1H",[["^ ","^Z",118,"^[",24,"^9","f"]]],"^1;",["^ ","~i9",[["^ ","^Z",0,"^[",28]],"~i10",[["^ ","^Z",7,"^[",28,"^9","instaparse.auto-flatten-seq/conj-flat"]],"^1?",[["^ ","^Z",45,"^[",28,"^9","instaparse.auto-flatten-seq/EMPTY"]],"^1<",[["^ ","^Z",79,"^[",28,"^9","result"]]],"~i41",["^ ","^11",[["^ ","^Z",0,"^[",32]],"~i13",[["^ ","^Z",7,"^[",32,"^9","instaparse.auto-flatten-seq/convert-afs-to-vec"]],"^1F",[["^ ","^Z",54,"^[",32]],"~i37",[["^ ","^Z",54,"^[",32,"^9","instaparse.auto-flatten-seq/conj-flat"]],"^1D",[["^ ","^Z",92,"^[",32],["^ ","^Z",137,"^[",32]],"~i52",[["^ ","^Z",92,"^[",32,"^9","instaparse.auto-flatten-seq/auto-flatten-seq"]],"~i74",[["^ ","^Z",220,"^[",32],["^ ","^Z",220,"^[",32]],"~i80",[["^ ","^Z",302,"^[",32,"^9","f"]],"~i85",[["^ ","^Z",314,"^[",32,"^9","result"]]],"~i43",["^ ","~i4",[["^ ","^Z",0,"^[",36],["^ ","^Z",0,"^[",37],["^ ","^Z",0,"^[",37],["^ ","^Z",50,"^[",37],["^ ","^Z",187,"^[",37]],"^1J",[["^ ","^Z",4,"^[",36,"^9","content"]],"^10",[["^ ","^Z",14,"^[",36]],"~i19",[["^ ","^Z",14,"^[",36,"^9","instaparse.auto-flatten-seq/conj-flat"]],"^1@",[["^ ","^Z",52,"^[",36,"^9","instaparse.auto-flatten-seq/EMPTY"]],"^1R",[["^ ","^Z",86,"^[",36,"^9","result"]]],"~i44",["^ ","^11",[["^ ","^Z",102,"^[",37],["^ ","^Z",102,"^[",37]],"^10",[["^ ","^Z",184,"^[",37,"^9","f"]],"^1E",[["^ ","^Z",244,"^[",37],["^ ","^Z",282,"^[",37]],"~i35",[["^ ","^Z",246,"^[",37],["^ ","^Z",276,"^[",37]],"~i42",[["^ ","^Z",247,"^[",37]],"^1R",[["^ ","^Z",247,"^[",37,"^9","cljs.core/count"]],"~i49",[["^ ","^Z",263,"^[",37,"^9","content"]],"~i63",[["^ ","^Z",287,"^[",37,"^9","content"]]],"^1C",["^ ","~i4",[["^ ","^Z",0,"^[",41]],"~i5",[["^ ","^Z",8,"^[",41,"^9","f"],["^ ","^Z",42,"^[",41,"^9","f"],["^ ","^Z",84,"^[",41,"^9","f"]],"~i7",[["^ ","^Z",74,"^[",41,"^9","result"],["^ ","^Z",96,"^[",41,"^9","result"]]],"~i47",["^ ","~i0",[["^ ","^Z",0,"^[",45],["^ ","^Z",0,"^[",45],["^ ","^Z",49,"^[",45],["^ ","^Z",106,"^[",45,"^9","var_args"],["^ ","^Z",0,"^[",46],["^ ","^Z",0,"^[",46],["^ ","^Z",4,"^[",46,"^9","G__29335"],["^ ","^Z",15,"^[",46],["^ ","^Z",15,"^[",46],["^ ","^Z",0,"^[",47],["^ ","^Z",0,"^[",47],["^ ","^Z",8,"^[",47,"^9","G__29335"],["^ ","^Z",5,"^[",48],["^ ","^Z",0,"^[",49],["^ ","^Z",7,"^[",49,"^9","instaparse.reduction/apply-standard-reductions"],["^ ","^Z",84,"^[",49],["^ ","^Z",85,"^[",49],["^ ","^Z",95,"^[",49],["^ ","^Z",5,"^[",52],["^ ","^Z",0,"^[",53],["^ ","^Z",7,"^[",53,"^9","instaparse.reduction/apply-standard-reductions"],["^ ","^Z",84,"^[",53],["^ ","^Z",85,"^[",53],["^ ","^Z",95,"^[",53],["^ ","^Z",101,"^[",53],["^ ","^Z",102,"^[",53],["^ ","^Z",112,"^[",53],["^ ","^Z",0,"^[",57],["^ ","^Z",6,"^[",57],["^ ","^Z",11,"^[",57,"^9","js/Error"],["^ ","^Z",17,"^[",57],["^ ","^Z",18,"^[",57],["^ ","^Z",80,"^[",57],["^ ","^Z",80,"^[",57],["^ ","^Z",0,"^[",62],["^ ","^Z",0,"^[",62],["^ ","^Z",79,"^[",62],["^ ","^Z",0,"^[",63],["^ ","^Z",0,"^[",66],["^ ","^Z",0,"^[",66],["^ ","^Z",79,"^[",66],["^ ","^Z",0,"^[",67],["^ ","^Z",0,"^[",126],["^ ","^Z",0,"^[",126],["^ ","^Z",73,"^[",126],["^ ","^Z",0,"^[",128]],"~i6",[["^ ","^Z",0,"^[",45,"^9","instaparse.reduction/apply-standard-reductions"],["^ ","^Z",0,"^[",62,"^9","instaparse.reduction/apply-standard-reductions"],["^ ","^Z",0,"^[",66,"^9","instaparse.reduction/apply-standard-reductions"],["^ ","^Z",0,"^[",126,"^9","instaparse.reduction/apply-standard-reductions"]]],"~i48",["^ ","~i4",[["^ ","^Z",90,"^[",62,"^9","grammar"]],"^1L",[["^ ","^Z",0,"^[",63]],"^17",[["^ ","^Z",7,"^[",63,"^9","instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2"]],"^1;",[["^ ","^Z",84,"^[",63,"^9","instaparse.reduction/standard-non-terminal-reduction"]],"~i72",[["^ ","^Z",137,"^[",63,"^9","grammar"]]],"^1W",["^ ","~i4",[["^ ","^Z",90,"^[",66,"^9","reduction-type"]],"^1S",[["^ ","^Z",105,"^[",66,"^9","grammar"]]],"~i50",["^ ","~i4",[["^ ","^Z",0,"^[",67],["^ ","^Z",4,"^[",67,"^9","temp__5455__auto__"],["^ ","^Z",0,"^[",68],["^ ","^Z",0,"^[",68],["^ ","^Z",20,"^[",68,"^9","temp__5455__auto__"],["^ ","^Z",0,"^[",69],["^ ","^Z",16,"^[",69,"^9","temp__5455__auto__"],["^ ","^Z",0,"^[",70]],"^1L",[["^ ","^Z",4,"^[",69,"^9","reduction"]],"^1>",[["^ ","^Z",25,"^[",67]],"^1?",[["^ ","^Z",26,"^[",67,"^9","instaparse.reduction/reduction-types"],["^ ","^Z",95,"^[",67,"^9","instaparse.reduction/reduction-types"],["^ ","^Z",180,"^[",67,"^9","instaparse.reduction/reduction-types"]],"^1;",[["^ ","^Z",162,"^[",67,"^9","reduction-type"],["^ ","^Z",227,"^[",67,"^9","reduction-type"]]],"^1D",["^ ","~i6",[["^ ","^Z",0,"^[",70],["^ ","^Z",52,"^[",70]],"~i7",[["^ ","^Z",7,"^[",70,"^9","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^12",[["^ ","^Z",87,"^[",70],["^ ","^Z",104,"^[",70,"^9","iter__6008__auto__"],["^ ","^Z",125,"^[",70],["^ ","^Z",50,"^[",71,"^9","s__29337"],["^ ","^Z",0,"^[",72],["^ ","^Z",0,"^[",72],["^ ","^Z",12,"^[",72,"^9","cljs.core/LazySeq"],["^ ","^Z",30,"^[",72],["^ ","^Z",35,"^[",72],["^ ","^Z",0,"^[",74],["^ ","^Z",0,"^[",74],["^ ","^Z",4,"^[",74,"^9","s__29337"],["^ ","^Z",19,"^[",74,"^9","s__29337"],["^ ","^Z",0,"^[",76],["^ ","^Z",0,"^[",76],["^ ","^Z",4,"^[",76,"^9","temp__5457__auto__"],["^ ","^Z",25,"^[",76],["^ ","^Z",25,"^[",76,"^9","cljs.core/seq"],["^ ","^Z",39,"^[",76,"^9","s__29337"],["^ ","^Z",0,"^[",77],["^ ","^Z",0,"^[",77],["^ ","^Z",3,"^[",77,"^9","temp__5457__auto__"],["^ ","^Z",0,"^[",78],["^ ","^Z",0,"^[",78],["^ ","^Z",4,"^[",78,"^9","s__29337"],["^ ","^Z",19,"^[",78,"^9","temp__5457__auto__"],["^ ","^Z",0,"^[",79],["^ ","^Z",0,"^[",79],["^ ","^Z",3,"^[",79],["^ ","^Z",3,"^[",79,"^9","cljs.core/chunked-seq?"],["^ ","^Z",32,"^[",79,"^9","s__29337"],["^ ","^Z",0,"^[",80],["^ ","^Z",4,"^[",80,"^9","c__6006__auto__"],["^ ","^Z",4,"^[",81,"^9","size__6007__auto__"],["^ ","^Z",25,"^[",81],["^ ","^Z",25,"^[",81,"^9","cljs.core/count"],["^ ","^Z",41,"^[",81,"^9","c__6006__auto__"],["^ ","^Z",4,"^[",82,"^9","b__29339"],["^ ","^Z",15,"^[",82],["^ ","^Z",15,"^[",82,"^9","cljs.core/chunk-buffer"],["^ ","^Z",38,"^[",82,"^9","size__6007__auto__"],["^ ","^Z",0,"^[",83],["^ ","^Z",0,"^[",83],["^ ","^Z",3,"^[",83],["^ ","^Z",3,"^[",83],["^ ","^Z",20,"^[",83,"^9","i__29338"],["^ ","^Z",31,"^[",83],["^ ","^Z",0,"^[",85],["^ ","^Z",0,"^[",85],["^ ","^Z",3,"^[",85],["^ ","^Z",4,"^[",85,"^9","i__29338"],["^ ","^Z",15,"^[",85,"^9","size__6007__auto__"],["^ ","^Z",0,"^[",86],["^ ","^Z",4,"^[",86,"^9","vec__29340"],["^ ","^Z",17,"^[",86],["^ ","^Z",17,"^[",86,"^9","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^Z",62,"^[",86,"^9","c__6006__auto__"],["^ ","^Z",78,"^[",86,"^9","i__29338"],["^ ","^Z",8,"^[",87],["^ ","^Z",8,"^[",87,"^9","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^Z",52,"^[",87,"^9","vec__29340"],["^ ","^Z",63,"^[",87],["^ ","^Z",67,"^[",87],["^ ","^Z",8,"^[",88],["^ ","^Z",8,"^[",88,"^9","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^Z",52,"^[",88,"^9","vec__29340"],["^ ","^Z",63,"^[",88],["^ ","^Z",67,"^[",88],["^ ","^Z",0,"^[",89],["^ ","^Z",0,"^[",89],["^ ","^Z",0,"^[",89],["^ ","^Z",0,"^[",89,"^9","cljs.core/chunk-append"],["^ ","^Z",23,"^[",89,"^9","b__29339"],["^ ","^Z",0,"^[",91],["^ ","^Z",15,"^[",91],["^ ","^Z",16,"^[",91,"^9","i__29338"],["^ ","^Z",27,"^[",91],["^ ","^Z",0,"^[",95],["^ ","^Z",0,"^[",100],["^ ","^Z",7,"^[",100,"^9","cljs.core/chunk-cons"],["^ ","^Z",28,"^[",100],["^ ","^Z",28,"^[",100,"^9","cljs.core/chunk"],["^ ","^Z",44,"^[",100,"^9","b__29339"],["^ ","^Z",54,"^[",100],["^ ","^Z",54,"^[",100,"^9","iter__29336"],["^ ","^Z",87,"^[",100],["^ ","^Z",87,"^[",100,"^9","cljs.core/chunk-rest"],["^ ","^Z",108,"^[",100,"^9","s__29337"],["^ ","^Z",0,"^[",102],["^ ","^Z",7,"^[",102,"^9","cljs.core/chunk-cons"],["^ ","^Z",28,"^[",102],["^ ","^Z",28,"^[",102,"^9","cljs.core/chunk"],["^ ","^Z",44,"^[",102,"^9","b__29339"],["^ ","^Z",54,"^[",102],["^ ","^Z",0,"^[",105],["^ ","^Z",4,"^[",105,"^9","vec__29343"],["^ ","^Z",17,"^[",105],["^ ","^Z",17,"^[",105,"^9","cljs.core/first"],["^ ","^Z",33,"^[",105,"^9","s__29337"],["^ ","^Z",8,"^[",106],["^ ","^Z",8,"^[",106,"^9","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^Z",52,"^[",106,"^9","vec__29343"],["^ ","^Z",63,"^[",106],["^ ","^Z",67,"^[",106],["^ ","^Z",8,"^[",107],["^ ","^Z",8,"^[",107,"^9","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^Z",52,"^[",107,"^9","vec__29343"],["^ ","^Z",63,"^[",107],["^ ","^Z",67,"^[",107],["^ ","^Z",0,"^[",108],["^ ","^Z",0,"^[",108],["^ ","^Z",7,"^[",108,"^9","cljs.core/cons"],["^ ","^Z",526,"^[",108],["^ ","^Z",526,"^[",108,"^9","iter__29336"],["^ ","^Z",559,"^[",108],["^ ","^Z",559,"^[",108,"^9","cljs.core/rest"],["^ ","^Z",574,"^[",108,"^9","s__29337"],["^ ","^Z",0,"^[",111],["^ ","^Z",1,"^[",116],["^ ","^Z",6,"^[",116],["^ ","^Z",0,"^[",119],["^ ","^Z",0,"^[",119],["^ ","^Z",7,"^[",119,"^9","iter__6008__auto__"]],"^19",[["^ ","^Z",4,"^[",87,"^9","k"],["^ ","^Z",4,"^[",106,"^9","k"]],"^1?",[["^ ","^Z",4,"^[",88,"^9","v"],["^ ","^Z",4,"^[",107,"^9","v"]],"^1A",[["^ ","^Z",26,"^[",119,"^9","grammar"]]],"^1N",["^ ","~i17",[["^ ","^Z",32,"^[",89],["^ ","^Z",135,"^[",89],["^ ","^Z",230,"^[",89],["^ ","^Z",22,"^[",108],["^ ","^Z",125,"^[",108],["^ ","^Z",220,"^[",108]],"^15",[["^ ","^Z",50,"^[",89],["^ ","^Z",50,"^[",89],["^ ","^Z",40,"^[",108],["^ ","^Z",40,"^[",108]],"^1A",[["^ ","^Z",131,"^[",89,"^9","v"],["^ ","^Z",121,"^[",108,"^9","v"]],"^1E",[["^ ","^Z",218,"^[",89,"^9","k"],["^ ","^Z",208,"^[",108,"^9","k"]],"^1@",[["^ ","^Z",220,"^[",89,"^9","v"],["^ ","^Z",210,"^[",108,"^9","v"]]],"~i53",["^ ","^14",[["^ ","^Z",313,"^[",89,"^9","k"],["^ ","^Z",303,"^[",108,"^9","k"]],"^19",[["^ ","^Z",315,"^[",89],["^ ","^Z",363,"^[",89],["^ ","^Z",305,"^[",108],["^ ","^Z",353,"^[",108]],"^1>",[["^ ","^Z",315,"^[",89,"^9","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],["^ ","^Z",305,"^[",108,"^9","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"~i29",[["^ ","^Z",361,"^[",89,"^9","v"],["^ ","^Z",351,"^[",108,"^9","v"]],"^1F",[["^ ","^Z",414,"^[",89],["^ ","^Z",404,"^[",108]],"^1M",[["^ ","^Z",415,"^[",89,"^9","reduction"],["^ ","^Z",457,"^[",89,"^9","reduction"],["^ ","^Z",502,"^[",89,"^9","reduction"],["^ ","^Z",405,"^[",108,"^9","reduction"],["^ ","^Z",447,"^[",108,"^9","reduction"],["^ ","^Z",492,"^[",108,"^9","reduction"]],"^1Y",[["^ ","^Z",497,"^[",89,"^9","k"],["^ ","^Z",522,"^[",89,"^9","k"],["^ ","^Z",487,"^[",108,"^9","k"],["^ ","^Z",512,"^[",108,"^9","k"]]],"~i54",["^ ","~i6",[["^ ","^Z",0,"^[",122],["^ ","^Z",143,"^[",122],["^ ","^Z",183,"^[",122]],"~i7",[["^ ","^Z",7,"^[",122,"^9","instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic"]]],"~i55",["^ ","^1@",[["^ ","^Z",168,"^[",122,"^9","reduction-type"]]],"~i774",["^ ","^1V",[["^ ","^Z",62,"^[",25],["^ ","^Z",62,"^[",25,"^9","G__29299"]]],"~i2382",["^ ","^1D",[["^ ","^Z",22,"^[",80],["^ ","^Z",22,"^[",80,"^9","cljs.core/chunk-first"],["^ ","^Z",44,"^[",80,"^9","s__29337"]]],"~i2485",["^ ","~i4",[["^ ","^Z",23,"^[",17],["^ ","^Z",23,"^[",17,"^9","cljs.core/List"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["^R","instaparse/auto_flatten_seq.cljc"],1516731432000,["~:macro","^B"],1516731430000,["^R","goog/math/math.js"],1516731431000,["^R","goog/array/array.js"],1516731431000,["^R","goog/debug/error.js"],1516731431000,["^R","goog/dom/nodetype.js"],1516731431000,["^R","goog/object/object.js"],1516731431000,"~:SHADOW-TIMESTAMP",1516731432000,["^R","goog/math/long.js"],1516731431000,["^R","instaparse/reduction.cljc"],1516731432000,["^R","goog/functions/functions.js"],1516731431000,["^R","goog/structs/map.js"],1516731431000,["^R","goog/asserts/asserts.js"],1516731431000,["^R","goog/uri/uri.js"],1516731431000,["^R","goog/base.js"],1516731431000,["^R","goog/structs/structs.js"],1516731431000,["^R","goog/string/string.js"],1516731431000,["^R","goog/reflect/reflect.js"],1516731431000,["^R","goog/string/stringbuffer.js"],1516731431000,["^R","goog/iter/iter.js"],1516731431000,["^R","cljs/core.cljs"],1516731430000,["^R","instaparse/util.cljc"],1516731432000,["^R","goog/math/integer.js"],1516731431000,["^R","goog/uri/utils.js"],1516731431000]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ "],"^6",null,"^7",["^8",[]],"^9","^:","^=",null,"^>",["^ ","^?","^?","^@","^?","^A","^A","^B","^B","^C","^C"],"^D",["^8",["^E"]],"~:shadow/js-access-global",["^8",["Error"]],"^F",["^ ","^G","^A"],"~:defs",["^ ","~$raw-non-terminal-reduction",["^ ","^9","~$instaparse.reduction/raw-non-terminal-reduction","~:file","instaparse/reduction.cljc","~:line",19,"~:column",1,"~:end-line",19,"~:end-column",32,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",19,"^2E",6,"^2F",19,"^2G",32],"~:tag","~$cljs.core/IMap"],"~$EnliveNonTerminalReduction",["^ ","~:protocol-inline",null,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",24,"^2E",7,"^2F",24,"^2G",33,"~:arglists",["^J",["~$quote",["^J",[["~$key"]]]]]],"^9","~$instaparse.reduction/EnliveNonTerminalReduction","~:variadic",false,"^2C","instaparse/reduction.cljc","^2G",33,"~:method-params",["^J",[["^2N"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^2E",1,"^2D",24,"^2F",24,"~:max-fixed-arity",1,"~:fn-var",true,"^2L",["^J",["^2M",["^J",[["^2N"]]]]]],"~$singleton?",["^ ","^2K",null,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",7,"^2E",7,"^2F",7,"^2G",17,"^2L",["^J",["^2M",["^J",[["~$s"]]]]]],"^9","~$instaparse.reduction/singleton?","^2P",false,"^2C","instaparse/reduction.cljc","^2G",17,"^2Q",["^J",[["~$s"]]],"^2R",null,"^2S",["^J",[null,null]],"^2E",1,"^2D",7,"^2F",7,"^2T",1,"^2U",true,"^2L",["^J",["^2M",["^J",[["~$s"]]]]]],"~$HiccupNonTerminalReduction",["^ ","^2K",null,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",21,"^2E",7,"^2F",21,"^2G",33,"^2L",["^J",["^2M",["^J",[["^2N"]]]]]],"^9","~$instaparse.reduction/HiccupNonTerminalReduction","^2P",false,"^2C","instaparse/reduction.cljc","^2G",33,"^2Q",["^J",[["^2N"]]],"^2R",null,"^2S",["^J",[null,null]],"^2E",1,"^2D",21,"^2F",21,"^2T",1,"^2U",true,"^2L",["^J",["^2M",["^J",[["^2N"]]]]]],"~$standard-non-terminal-reduction",["^ ","^9","~$instaparse.reduction/standard-non-terminal-reduction","^2C","instaparse/reduction.cljc","^2D",37,"^2E",1,"^2F",37,"^2G",37,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",37,"^2E",6,"^2F",37,"^2G",37],"^2H","~$cljs.core/Keyword"],"~$apply-reduction",["^ ","^2K",null,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",39,"^2E",7,"^2F",39,"^2G",22,"^2L",["^J",["^2M",["^J",[["~$f","~$result"]]]]]],"^9","~$instaparse.reduction/apply-reduction","^2P",false,"^2C","instaparse/reduction.cljc","^2G",22,"^2Q",["^J",[["~$f","^32"]]],"^2R",null,"^2S",["^J",[null,null]],"^2E",1,"^2D",39,"^2F",39,"^2T",2,"^2U",true,"^2L",["^J",["^2M",["^J",[["~$f","^32"]]]]]],"~$apply-standard-reductions",["^ ","^2K",null,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",48,"^2E",7,"^2F",48,"^2G",32,"^2L",["^J",["^2M",["^J",[["~$grammar"],["~$reduction-type","^35"]]]]],"~:top-fn",["^ ","^2P",false,"^2T",2,"^2Q",["^J",[["^35"],["^36","^35"]]],"^2L",["^J",[["^35"],["^36","^35"]]],"^2S",["^J",[null,null]]]],"^9","~$instaparse.reduction/apply-standard-reductions","^2P",false,"^2C","instaparse/reduction.cljc","^2G",32,"^37",["^ ","^2P",false,"^2T",2,"^2Q",["^J",[["^35"],["^36","^35"]]],"^2L",["^J",[["^35"],["^36","^35"]]],"^2S",["^J",[null,null]]],"^2Q",["^J",[["^35"],["^36","^35"]]],"^2R",null,"^2S",["^J",[null,null]],"^2E",1,"^2D",48,"^2F",48,"^2T",2,"^2U",true,"^2L",["^J",[["^35"],["^36","^35"]]]],"~$red",["^ ","^2K",null,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",15,"^2E",7,"^2F",15,"^2G",10,"^2L",["^J",["^2M",["^J",[["~$parser","~$f"]]]]]],"^9","~$instaparse.reduction/red","^2P",false,"^2C","instaparse/reduction.cljc","^2G",10,"^2Q",["^J",[["^3:","~$f"]]],"^2R",null,"^2S",["^J",[null,null]],"^2E",1,"^2D",15,"^2F",15,"^2T",2,"^2U",true,"^2L",["^J",["^2M",["^J",[["^3:","~$f"]]]]]],"~$node-builders",["^ ","^9","~$instaparse.reduction/node-builders","^2C","instaparse/reduction.cljc","^2D",31,"^2E",1,"^2F",31,"^2G",30,"~:constant",true,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",31,"^2E",17,"^2F",31,"^2G",30,"^3>",true],"^2H","^2I"],"~$reduction-types",["^ ","^9","~$instaparse.reduction/reduction-types","^2C","instaparse/reduction.cljc","^2D",27,"^2E",1,"^2F",27,"^2G",32,"^3>",true,"^5",["^ ","^2C","instaparse/reduction.cljc","^2D",27,"^2E",17,"^2F",27,"^2G",32,"^3>",true],"^2H","^2I"]],"^H",["^ ","^B","^B"],"~:cljs.analyzer/constants",["^ ","^D",["^8",["~:key","~:content","~:raw","~:hiccup","~:enlive","~:red","~:reduction-type","^2H"]],"~:order",["^3G","^3H","^3D","^3B","^3E","^3F","^2H","^3C"]],"^N",["^ ","^E",["^8",[]]],"^O",["^ "],"^P",["^C","^B","^?","^A"]],"^<","^:","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2;",[["^3L","~:static-fns"],true,["^3L","~:elide-asserts"],true,["^3L","~:optimize-constants"],null,["^3L","~:emit-constants"],null,["^3L","~:infer-externs"],true,["^3L","^W"],null,["~:js-options","~:js-provider"],"^E",["~:mode"],"~:release",["^3L","~:fn-invoke-direct"],null,["^3L","^Y"],null]]]