["^ ","~:output",["^ ","~:js","goog.provide('io.mantisrx.mql.compilers.core.window');\n/**\n * MQL supports two modes for windowing; tumbling and sliding. Tumbling windows\n * are made using a single integer parameter `select * from stream window 10`\n * Sliding windows are provided a span (length of the window) and a shift\n * which indicates how far to slide `select * from stream window 5 1`\n * \n * span: The length of the window in seconds.\n * shift: The amount a sliding window should shift by at each step.\n * \n * Returns: I'm not sure yet.\n */\nio.mantisrx.mql.compilers.core.window.window__GT_fn = (function io$mantisrx$mql$compilers$core$window$window__GT_fn(var_args){\nvar G__31567 = arguments.length;\nswitch (G__31567) {\ncase 1:\nreturn io.mantisrx.mql.compilers.core.window.window__GT_fn.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn io.mantisrx.mql.compilers.core.window.window__GT_fn.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nio.mantisrx.mql.compilers.core.window.window__GT_fn.cljs$core$IFn$_invoke$arity$1 = (function (span){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"window\",\"window\",724519534),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [span,span], null)], null);\n});\n\nio.mantisrx.mql.compilers.core.window.window__GT_fn.cljs$core$IFn$_invoke$arity$2 = (function (span,shift){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"window\",\"window\",724519534),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [span,shift], null)], null);\n});\n\nio.mantisrx.mql.compilers.core.window.window__GT_fn.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ "],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$io.mantisrx.mql.compilers.core.window","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^?","~$goog","^@"],"~:seen",["^8",[]],"~:uses",null,"~:require-macros",["^ ","^?","^?"],"~:form",["~#list",["~$ns","^:"]],"~:js-deps",["^ "],"~:deps",["^@","^?"]],"^<","^:","~:resource-id",["~:shadow.build.classpath/resource","io/mantisrx/mql/compilers/core/window.cljc"],"~:compiled-at",1535412028762,"~:resource-name","io/mantisrx/mql/compilers/core/window.cljc","~:warnings",[],"~:source","(ns io.mantisrx.mql.compilers.core.window)\n\n(defn window->fn\n  \"MQL supports two modes for windowing; tumbling and sliding. Tumbling windows\n   are made using a single integer parameter `select * from stream window 10`\n   Sliding windows are provided a span (length of the window) and a shift\n   which indicates how far to slide `select * from stream window 5 1`\n\n   span: The length of the window in seconds.\n   shift: The amount a sliding window should shift by at each step.\n\n   Returns: I'm not sure yet.\"\n  ([span]\n   {:window [span span]})\n  ([span shift]\n   {:window [span shift]}))\n","~:reader-features",["^8",["~:cljs"]],"~:source-map",["^ ","~i2",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",1],["^ ","^R",0,"^S",1],["^ ","^R",54,"^S",12],["^ ","^R",116,"^S",12,"^9","var_args"],["^ ","^R",0,"^S",13],["^ ","^R",0,"^S",13],["^ ","^R",4,"^S",13,"^9","G__31567"],["^ ","^R",15,"^S",13],["^ ","^R",15,"^S",13],["^ ","^R",0,"^S",14],["^ ","^R",0,"^S",14],["^ ","^R",8,"^S",14,"^9","G__31567"],["^ ","^R",5,"^S",15],["^ ","^R",0,"^S",16],["^ ","^R",7,"^S",16,"^9","io.mantisrx.mql.compilers.core.window/window->fn"],["^ ","^R",89,"^S",16],["^ ","^R",90,"^S",16],["^ ","^R",100,"^S",16],["^ ","^R",5,"^S",19],["^ ","^R",0,"^S",20],["^ ","^R",7,"^S",20,"^9","io.mantisrx.mql.compilers.core.window/window->fn"],["^ ","^R",89,"^S",20],["^ ","^R",90,"^S",20],["^ ","^R",100,"^S",20],["^ ","^R",106,"^S",20],["^ ","^R",107,"^S",20],["^ ","^R",117,"^S",20],["^ ","^R",0,"^S",24],["^ ","^R",6,"^S",24],["^ ","^R",11,"^S",24,"^9","js/Error"],["^ ","^R",17,"^S",24],["^ ","^R",18,"^S",24],["^ ","^R",80,"^S",24],["^ ","^R",80,"^S",24],["^ ","^R",0,"^S",29],["^ ","^R",0,"^S",29],["^ ","^R",84,"^S",29],["^ ","^R",0,"^S",30],["^ ","^R",0,"^S",30],["^ ","^R",50,"^S",30],["^ ","^R",106,"^S",30],["^ ","^R",0,"^S",33],["^ ","^R",0,"^S",33],["^ ","^R",84,"^S",33],["^ ","^R",0,"^S",34],["^ ","^R",0,"^S",34],["^ ","^R",50,"^S",34],["^ ","^R",106,"^S",34],["^ ","^R",0,"^S",37],["^ ","^R",0,"^S",37],["^ ","^R",78,"^S",37],["^ ","^R",0,"^S",39]],"~i6",[["^ ","^R",0,"^S",12,"^9","io.mantisrx.mql.compilers.core.window/window->fn"],["^ ","^R",0,"^S",29,"^9","io.mantisrx.mql.compilers.core.window/window->fn"],["^ ","^R",0,"^S",33,"^9","io.mantisrx.mql.compilers.core.window/window->fn"],["^ ","^R",0,"^S",37,"^9","io.mantisrx.mql.compilers.core.window/window->fn"]]],"~i12",["^ ","~i4",[["^ ","^R",95,"^S",29,"^9","span"]]],"~i13",["^ ","^U",[["^ ","^R",189,"^S",30,"^9","span"]],"~i18",[["^ ","^R",194,"^S",30,"^9","span"]]],"~i14",["^ ","~i4",[["^ ","^R",95,"^S",33,"^9","span"]],"~i9",[["^ ","^R",100,"^S",33,"^9","shift"]]],"~i15",["^ ","^U",[["^ ","^R",189,"^S",34,"^9","span"]],"^V",[["^ ","^R",194,"^S",34,"^9","shift"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^?"],1516731430000,["^J","goog/math/math.js"],1516731431000,["^J","goog/array/array.js"],1516731431000,["^J","goog/debug/error.js"],1516731431000,["^J","goog/dom/nodetype.js"],1516731431000,["^J","goog/object/object.js"],1516731431000,"~:SHADOW-TIMESTAMP",1516731432000,["^J","goog/math/long.js"],1516731431000,["^J","goog/functions/functions.js"],1516731431000,["^J","goog/structs/map.js"],1516731431000,["^J","goog/asserts/asserts.js"],1516731431000,["^J","goog/uri/uri.js"],1516731431000,["^J","io/mantisrx/mql/compilers/core/window.cljc"],[1526321274000],["^J","goog/base.js"],1516731431000,["^J","goog/structs/structs.js"],1516731431000,["^J","goog/string/string.js"],1516731431000,["^J","goog/reflect/reflect.js"],1516731431000,["^J","goog/string/stringbuffer.js"],1516731431000,["^J","goog/iter/iter.js"],1516731431000,["^J","cljs/core.cljs"],1516731430000,["^J","goog/math/integer.js"],1516731431000,["^J","goog/uri/utils.js"],1516731431000]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ "],"^6",null,"^7",["^8",[]],"^9","^:","^=",null,"^>",["^ ","^?","^?","^@","^@"],"^A",["^8",[]],"~:shadow/js-access-global",["^8",["Error"]],"^B",null,"~:defs",["^ ","~$window->fn",["^ ","~:protocol-inline",null,"^5",["^ ","~:file","io/mantisrx/mql/compilers/core/window.cljc","~:line",3,"~:column",7,"~:end-line",3,"~:end-column",17,"~:arglists",["^E",["~$quote",["^E",[["~$span"],["^1>","~$shift"]]]]],"~:doc","MQL supports two modes for windowing; tumbling and sliding. Tumbling windows\n   are made using a single integer parameter `select * from stream window 10`\n   Sliding windows are provided a span (length of the window) and a shift\n   which indicates how far to slide `select * from stream window 5 1`\n\n   span: The length of the window in seconds.\n   shift: The amount a sliding window should shift by at each step.\n\n   Returns: I'm not sure yet.","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",2,"~:method-params",["^E",[["^1>"],["^1>","^1?"]]],"^1<",["^E",[["^1>"],["^1>","^1?"]]],"~:arglists-meta",["^E",[null,null]]]],"^9","~$io.mantisrx.mql.compilers.core.window/window->fn","^1B",false,"^17","io/mantisrx/mql/compilers/core/window.cljc","^1;",17,"^1A",["^ ","^1B",false,"^1C",2,"^1D",["^E",[["^1>"],["^1>","^1?"]]],"^1<",["^E",[["^1>"],["^1>","^1?"]]],"^1E",["^E",[null,null]]],"^1D",["^E",[["^1>"],["^1>","^1?"]]],"~:protocol-impl",null,"^1E",["^E",[null,null]],"^19",1,"^18",3,"^1:",3,"^1C",2,"~:fn-var",true,"^1<",["^E",[["^1>"],["^1>","^1?"]]],"^1@","MQL supports two modes for windowing; tumbling and sliding. Tumbling windows\n   are made using a single integer parameter `select * from stream window 10`\n   Sliding windows are provided a span (length of the window) and a shift\n   which indicates how far to slide `select * from stream window 5 1`\n\n   span: The length of the window in seconds.\n   shift: The amount a sliding window should shift by at each step.\n\n   Returns: I'm not sure yet."]],"^C",["^ ","^?","^?"],"~:cljs.analyzer/constants",["^ ","^A",["^8",["~:window"]],"~:order",["^1J"]],"^G",["^ "],"^H",["^@","^?"]],"^<","^:","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^[",[["^1N","~:static-fns"],true,["^1N","~:elide-asserts"],true,["^1N","~:optimize-constants"],null,["^1N","~:emit-constants"],null,["^1N","~:infer-externs"],true,["^1N","^O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^1N","~:fn-invoke-direct"],null,["^1N","^Q"],null]]]