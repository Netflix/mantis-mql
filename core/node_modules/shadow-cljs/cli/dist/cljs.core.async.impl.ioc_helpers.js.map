{"version":3,"file":"cljs.core.async.impl.ioc_helpers.js","sources":["cljs/core/async/impl/ioc_helpers.cljs"],"mappings":"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","names":["statearr-31954","state","c","continue-block","value","statearr-31947","G__31857","cljs.core/not","catch-block","statearr-31955","and__7067__auto__","exception","cljs.core.async.impl.ioc-helpers/BINDINGS-IDX","cljs.core.async.impl.ioc-helpers/aget-object","cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION","cljs.core.async.impl.ioc-helpers/return-chan","finally-block","cljs.core.async.impl.ioc-helpers/fn-handler","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","catch-exception","exception-frame","js/Object","ex","statearr-31822","cljs.core.async.impl.ioc-helpers/VALUE-IDX","x","cljs.core.async.impl.ioc-helpers/STATE-IDX","blk","cljs.core.async.impl.ioc-helpers/FN-IDX","statearr-31836","ret-val","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","arr","idx","statearr-31824","cljs.core/deref","cb","cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES","state-array","statearr-31953","statearr-31956","cljs.core/List","cljs.core.async.impl.ioc-helpers/USER-START-IDX","statearr-31838","cljs.core.async.impl.ioc-helpers/run-state-machine","o","cljs.core/keyword-identical?","cljs.core.async.impl.ioc-helpers/take!","_","temp__5455__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","f","fexpr__31808","cljs.core.async.impl.ioc-helpers/aset-object","cljs.core.async.impl.ioc-helpers/process-exception","cljs.core.async.impl.ioc-helpers/->ExceptionFrame","cljs.core.async.impl.ioc-helpers/finished?","js/Error","val","cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers31768","_31770","meta31769","cljs.core/PROTOCOL_SENTINEL","this__7750__auto__","writer__7751__auto__","opt__7752__auto__","cljs.core/-write","cljs.core.async.impl.ioc-helpers/->t_cljs$core$async$impl$ioc_helpers31768","cljs.core.async.impl.ioc-helpers/add-exception-frame","statearr-31952","cljs.core.async.impl.ioc-helpers/put!","this__8839__auto__","k__8840__auto__","cljs.core._lookup.cljs$core$IFn$_invoke$arity$3","this__8841__auto__","k31853","else__8842__auto__","cljs.core/Keyword","prev","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__8853__auto__","writer__8854__auto__","opts__8855__auto__","pr-pair__8856__auto__","keyval__8857__auto__","cljs.core/pr-sequential-writer","cljs.core/pr-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__31852","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__8837__auto__","__meta","this__8834__auto__","__hash","this__8843__auto__","cljs.core/count","this__8835__auto__","h__7535__auto__","fexpr__31870","coll__8836__auto__","cljs.core/hash-unordered-coll","this31854","other31855","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","this__8848__auto__","k__8849__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__8846__auto__","k__8847__auto__","pred__31894","expr__31895","G__31901","G__31902","G__31903","G__31904","G__31905","G__31906","G__31908","G__31909","G__31910","G__31911","this__8851__auto__","cljs.core/seq","this__8838__auto__","this__8844__auto__","entry__8845__auto__","cljs.core/vector?","cljs.core/-assoc","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/-conj","cljs.core.async.impl.ioc-helpers/ExceptionFrame","this__7805__auto__","writer__7806__auto__","G__31856","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core.async.impl.ioc-helpers/map->ExceptionFrame","e31810"],"sourcesContent":["(ns cljs.core.async.impl.ioc-helpers\n  (:require [cljs.core.async.impl.protocols :as impl])\n  (:require-macros [cljs.core.async.impl.ioc-macros :as ioc]))\n\n(def ^:const FN-IDX 0)\n(def ^:const STATE-IDX 1)\n(def ^:const VALUE-IDX 2)\n(def ^:const BINDINGS-IDX 3)\n(def ^:const EXCEPTION-FRAMES 4)\n(def ^:const CURRENT-EXCEPTION 5)\n(def ^:const USER-START-IDX 6)\n\n(defn aset-object [arr idx o]\n  (aget arr idx o))\n\n(defn aget-object [arr idx]\n  (aget arr idx))\n\n\n(defn finished?\n  \"Returns true if the machine is in a finished state\"\n  [state-array]\n  (keyword-identical? (aget state-array STATE-IDX) :finished))\n\n(defn- fn-handler\n  [f]\n  (reify\n   impl/Handler\n   (active? [_] true)\n   (blockable? [_] true)\n   (commit [_] f)))\n\n\n(defn run-state-machine [state]\n  ((aget-object state FN-IDX) state))\n\n(defn run-state-machine-wrapped [state]\n  (try\n    (run-state-machine state)\n    (catch js/Object ex\n      (impl/close! ^not-native (aget-object state USER-START-IDX))\n      (throw ex))))\n\n(defn take! [state blk ^not-native c]\n  (if-let [cb (impl/take! c (fn-handler\n                                   (fn [x]\n                                     (ioc/aset-all! state VALUE-IDX x STATE-IDX blk)\n                                     (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn put! [state blk ^not-native c val]\n  (if-let [cb (impl/put! c val (fn-handler (fn [ret-val]\n                                             (ioc/aset-all! state VALUE-IDX ret-val STATE-IDX blk)\n                                             (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn return-chan [state value]\n  (let [^not-native c (aget state USER-START-IDX)]\n           (when-not (nil? value)\n             (impl/put! c value (fn-handler (fn [] nil))))\n           (impl/close! c)\n           c))\n\n(defrecord ExceptionFrame [catch-block\n                           ^Class catch-exception\n                           finally-block\n                           continue-block\n                           prev])\n\n(defn add-exception-frame [state catch-block catch-exception finally-block continue-block]\n  (ioc/aset-all! state\n                 EXCEPTION-FRAMES\n                 (->ExceptionFrame catch-block\n                                   catch-exception\n                                   finally-block\n                                   continue-block\n                                   (aget-object state EXCEPTION-FRAMES))))\n\n(defn process-exception [state]\n  (let [exception-frame (aget-object state EXCEPTION-FRAMES)\n        catch-block (:catch-block exception-frame)\n        catch-exception (:catch-exception exception-frame)\n        exception (aget-object state CURRENT-EXCEPTION)]\n    (cond\n     (and exception\n          (not exception-frame))\n     (throw exception)\n\n     (and exception\n          catch-block\n          (or (= :default catch-exception)\n              (instance? catch-exception exception)))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    catch-block\n                    VALUE-IDX\n                    exception\n                    CURRENT-EXCEPTION\n                    nil\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :catch-block nil\n                      :catch-exception nil))\n\n\n     (and exception\n          (not catch-block)\n          (not (:finally-block exception-frame)))\n\n     (do (ioc/aset-all! state\n                        EXCEPTION-FRAMES\n                        (:prev exception-frame))\n         (recur state))\n\n     (and exception\n          (not catch-block)\n          (:finally-block exception-frame))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    (:finally-block exception-frame)\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :finally-block nil))\n\n     (and (not exception)\n          (:finally-block exception-frame))\n     (do (ioc/aset-all! state\n                        STATE-IDX\n                        (:finally-block exception-frame)\n                        EXCEPTION-FRAMES\n                        (assoc exception-frame\n                          :finally-block nil)))\n\n     (and (not exception)\n          (not (:finally-block exception-frame)))\n     (do (ioc/aset-all! state\n                   STATE-IDX\n                   (:continue-block exception-frame)\n                   EXCEPTION-FRAMES\n                   (:prev exception-frame)))\n\n     :else (throw (js/Error. \"No matching clause\")))))\n"]}